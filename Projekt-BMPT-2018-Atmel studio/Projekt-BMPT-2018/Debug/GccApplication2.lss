
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000012a  00800100  00000f24  00000f98  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f24  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000010c2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010f4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  00001134  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002e9a  00000000  00000000  000011dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a3d  00000000  00000000  00004076  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000139c  00000000  00000000  00004ab3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000150  00000000  00000000  00005e50  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000053e  00000000  00000000  00005fa0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000200a  00000000  00000000  000064de  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000100  00000000  00000000  000084e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3b 00 	jmp	0x76	; 0x76 <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	e0 05       	cpc	r30, r0
  6a:	fe 05       	cpc	r31, r14
  6c:	1a 06       	cpc	r1, r26
  6e:	36 06       	cpc	r3, r22
  70:	52 06       	cpc	r5, r18
  72:	6e 06       	cpc	r6, r30
  74:	8a 06       	cpc	r8, r26

00000076 <__ctors_end>:
  76:	11 24       	eor	r1, r1
  78:	1f be       	out	0x3f, r1	; 63
  7a:	cf ef       	ldi	r28, 0xFF	; 255
  7c:	d8 e0       	ldi	r29, 0x08	; 8
  7e:	de bf       	out	0x3e, r29	; 62
  80:	cd bf       	out	0x3d, r28	; 61

00000082 <__do_copy_data>:
  82:	12 e0       	ldi	r17, 0x02	; 2
  84:	a0 e0       	ldi	r26, 0x00	; 0
  86:	b1 e0       	ldi	r27, 0x01	; 1
  88:	e4 e2       	ldi	r30, 0x24	; 36
  8a:	ff e0       	ldi	r31, 0x0F	; 15
  8c:	02 c0       	rjmp	.+4      	; 0x92 <__do_copy_data+0x10>
  8e:	05 90       	lpm	r0, Z+
  90:	0d 92       	st	X+, r0
  92:	aa 32       	cpi	r26, 0x2A	; 42
  94:	b1 07       	cpc	r27, r17
  96:	d9 f7       	brne	.-10     	; 0x8e <__do_copy_data+0xc>
  98:	0e 94 0b 01 	call	0x216	; 0x216 <main>
  9c:	0c 94 90 07 	jmp	0xf20	; 0xf20 <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) )
    {
        lcd_putc(c);
    }
}/* lcd_puts_p */
  a4:	29 9a       	sbi	0x05, 1	; 5
  a6:	85 e0       	ldi	r24, 0x05	; 5
  a8:	8a 95       	dec	r24
  aa:	f1 f7       	brne	.-4      	; 0xa8 <toggle_e+0x4>
  ac:	00 00       	nop
  ae:	29 98       	cbi	0x05, 1	; 5
  b0:	08 95       	ret

000000b2 <lcd_write>:
  b2:	cf 93       	push	r28
  b4:	c8 2f       	mov	r28, r24
  b6:	66 23       	and	r22, r22
  b8:	11 f0       	breq	.+4      	; 0xbe <lcd_write+0xc>
  ba:	28 9a       	sbi	0x05, 0	; 5
  bc:	01 c0       	rjmp	.+2      	; 0xc0 <lcd_write+0xe>
  be:	28 98       	cbi	0x05, 0	; 5
  c0:	54 9a       	sbi	0x0a, 4	; 10
  c2:	55 9a       	sbi	0x0a, 5	; 10
  c4:	56 9a       	sbi	0x0a, 6	; 10
  c6:	57 9a       	sbi	0x0a, 7	; 10
  c8:	5f 98       	cbi	0x0b, 7	; 11
  ca:	5e 98       	cbi	0x0b, 6	; 11
  cc:	5d 98       	cbi	0x0b, 5	; 11
  ce:	5c 98       	cbi	0x0b, 4	; 11
  d0:	cc 23       	and	r28, r28
  d2:	0c f4       	brge	.+2      	; 0xd6 <lcd_write+0x24>
  d4:	5f 9a       	sbi	0x0b, 7	; 11
  d6:	c6 fd       	sbrc	r28, 6
  d8:	5e 9a       	sbi	0x0b, 6	; 11
  da:	c5 fd       	sbrc	r28, 5
  dc:	5d 9a       	sbi	0x0b, 5	; 11
  de:	c4 fd       	sbrc	r28, 4
  e0:	5c 9a       	sbi	0x0b, 4	; 11
  e2:	0e 94 52 00 	call	0xa4	; 0xa4 <toggle_e>
  e6:	5f 98       	cbi	0x0b, 7	; 11
  e8:	5e 98       	cbi	0x0b, 6	; 11
  ea:	5d 98       	cbi	0x0b, 5	; 11
  ec:	5c 98       	cbi	0x0b, 4	; 11
  ee:	c3 fd       	sbrc	r28, 3
  f0:	5f 9a       	sbi	0x0b, 7	; 11
  f2:	c2 fd       	sbrc	r28, 2
  f4:	5e 9a       	sbi	0x0b, 6	; 11
  f6:	c1 fd       	sbrc	r28, 1
  f8:	5d 9a       	sbi	0x0b, 5	; 11
  fa:	c0 fd       	sbrc	r28, 0
  fc:	5c 9a       	sbi	0x0b, 4	; 11
  fe:	0e 94 52 00 	call	0xa4	; 0xa4 <toggle_e>
 102:	5c 9a       	sbi	0x0b, 4	; 11
 104:	5d 9a       	sbi	0x0b, 5	; 11
 106:	5e 9a       	sbi	0x0b, 6	; 11
 108:	5f 9a       	sbi	0x0b, 7	; 11
 10a:	8f e3       	ldi	r24, 0x3F	; 63
 10c:	9f e1       	ldi	r25, 0x1F	; 31
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <lcd_write+0x5c>
 112:	00 c0       	rjmp	.+0      	; 0x114 <lcd_write+0x62>
 114:	00 00       	nop
 116:	cf 91       	pop	r28
 118:	08 95       	ret

0000011a <lcd_command>:
 11a:	60 e0       	ldi	r22, 0x00	; 0
 11c:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_write>
 120:	08 95       	ret

00000122 <lcd_gotoxy>:
 122:	61 11       	cpse	r22, r1
 124:	04 c0       	rjmp	.+8      	; 0x12e <lcd_gotoxy+0xc>
 126:	80 58       	subi	r24, 0x80	; 128
 128:	0e 94 8d 00 	call	0x11a	; 0x11a <lcd_command>
 12c:	08 95       	ret
 12e:	80 54       	subi	r24, 0x40	; 64
 130:	0e 94 8d 00 	call	0x11a	; 0x11a <lcd_command>
 134:	08 95       	ret

00000136 <lcd_clrscr>:
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	0e 94 8d 00 	call	0x11a	; 0x11a <lcd_command>
 13c:	08 95       	ret

0000013e <lcd_putc>:
 13e:	61 e0       	ldi	r22, 0x01	; 1
 140:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_write>
 144:	08 95       	ret

00000146 <lcd_puts>:
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	ec 01       	movw	r28, r24
 14c:	21 96       	adiw	r28, 0x01	; 1
 14e:	fc 01       	movw	r30, r24
 150:	80 81       	ld	r24, Z
 152:	88 23       	and	r24, r24
 154:	29 f0       	breq	.+10     	; 0x160 <lcd_puts+0x1a>
 156:	0e 94 9f 00 	call	0x13e	; 0x13e <lcd_putc>
 15a:	89 91       	ld	r24, Y+
 15c:	81 11       	cpse	r24, r1
 15e:	fb cf       	rjmp	.-10     	; 0x156 <lcd_puts+0x10>
 160:	df 91       	pop	r29
 162:	cf 91       	pop	r28
 164:	08 95       	ret

00000166 <lcd_init>:
*                  LCD_DISP_ON_CURSOR      display on, cursor on
*                  LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
*  Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 166:	cf 93       	push	r28
 168:	c8 2f       	mov	r28, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
 16a:	20 9a       	sbi	0x04, 0	; 4
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
 16c:	55 9a       	sbi	0x0a, 5	; 10
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
 16e:	21 9a       	sbi	0x04, 1	; 4
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
 170:	54 9a       	sbi	0x0a, 4	; 10
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
 172:	55 9a       	sbi	0x0a, 5	; 10
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
 174:	56 9a       	sbi	0x0a, 6	; 10
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
 176:	57 9a       	sbi	0x0a, 7	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 178:	8f ef       	ldi	r24, 0xFF	; 255
 17a:	99 ef       	ldi	r25, 0xF9	; 249
 17c:	01 97       	sbiw	r24, 0x01	; 1
 17e:	f1 f7       	brne	.-4      	; 0x17c <lcd_init+0x16>
 180:	00 c0       	rjmp	.+0      	; 0x182 <lcd_init+0x1c>
 182:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP); /* wait 16ms or more after power-on       */

    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN); // LCD_FUNCTION>>4;
 184:	5d 9a       	sbi	0x0b, 5	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN); // LCD_FUNCTION_8BIT>>4;
 186:	5c 9a       	sbi	0x0b, 4	; 11
    lcd_e_toggle();
 188:	0e 94 52 00 	call	0xa4	; 0xa4 <toggle_e>
 18c:	8f e1       	ldi	r24, 0x1F	; 31
 18e:	9e e4       	ldi	r25, 0x4E	; 78
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <lcd_init+0x2a>
 194:	00 c0       	rjmp	.+0      	; 0x196 <lcd_init+0x30>
 196:	00 00       	nop
    delay(LCD_DELAY_INIT); /* delay, busy flag can't be checked here */

    /* repeat last command */
    lcd_e_toggle();
 198:	0e 94 52 00 	call	0xa4	; 0xa4 <toggle_e>
 19c:	8f ef       	ldi	r24, 0xFF	; 255
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	01 97       	sbiw	r24, 0x01	; 1
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <lcd_init+0x3a>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <lcd_init+0x40>
 1a6:	00 00       	nop
    delay(LCD_DELAY_INIT_REP); /* delay, busy flag can't be checked here */

    /* repeat last command a third time */
    lcd_e_toggle();
 1a8:	0e 94 52 00 	call	0xa4	; 0xa4 <toggle_e>
 1ac:	8f ef       	ldi	r24, 0xFF	; 255
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcd_init+0x4a>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <lcd_init+0x50>
 1b6:	00 00       	nop
    delay(LCD_DELAY_INIT_REP); /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN); // LCD_FUNCTION_4BIT_1LINE>>4
 1b8:	5c 98       	cbi	0x0b, 4	; 11
    lcd_e_toggle();
 1ba:	0e 94 52 00 	call	0xa4	; 0xa4 <toggle_e>
 1be:	8f ef       	ldi	r24, 0xFF	; 255
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	01 97       	sbiw	r24, 0x01	; 1
 1c4:	f1 f7       	brne	.-4      	; 0x1c2 <lcd_init+0x5c>
 1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <lcd_init+0x62>
 1c8:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
    lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
    lcd_command(KS0073_4LINES_MODE);
    lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
    #else
    lcd_command(LCD_FUNCTION_DEFAULT); /* function set: display lines  */
 1ca:	88 e2       	ldi	r24, 0x28	; 40
 1cc:	0e 94 8d 00 	call	0x11a	; 0x11a <lcd_command>
    #endif
    lcd_command(LCD_DISP_OFF);     /* display off                  */
 1d0:	88 e0       	ldi	r24, 0x08	; 8
 1d2:	0e 94 8d 00 	call	0x11a	; 0x11a <lcd_command>
    lcd_clrscr();                  /* display clear                */
 1d6:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT); /* set entry mode               */
 1da:	86 e0       	ldi	r24, 0x06	; 6
 1dc:	0e 94 8d 00 	call	0x11a	; 0x11a <lcd_command>
    lcd_command(dispAttr);         /* display/cursor control       */
 1e0:	8c 2f       	mov	r24, r28
 1e2:	0e 94 8d 00 	call	0x11a	; 0x11a <lcd_command>
}/* lcd_init */
 1e6:	cf 91       	pop	r28
 1e8:	08 95       	ret

000001ea <setup>:
  * @brief Setup all peripherals.
  */
void setup(void)
{
	/* Initialize display and select type of cursor */
	lcd_init(LCD_DISP_ON_CURSOR_BLINK);
 1ea:	8f e0       	ldi	r24, 0x0F	; 15
 1ec:	0e 94 b3 00 	call	0x166	; 0x166 <lcd_init>
    /* Clear display and set cursor to home position */
    lcd_clrscr();
 1f0:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>

	/* Set output pins */
    DDRB |= _BV(PB4);
 1f4:	24 9a       	sbi	0x04, 4	; 4
    DDRB |= _BV(PB3);
 1f6:	23 9a       	sbi	0x04, 3	; 4
    DDRB |= _BV(PB2);
 1f8:	22 9a       	sbi	0x04, 2	; 4

    /* Turn LEDs off */
    PORTB &= ~_BV(PB4);
 1fa:	2c 98       	cbi	0x05, 4	; 5
    PORTB &= ~_BV(PB3);
 1fc:	2b 98       	cbi	0x05, 3	; 5
    PORTB &= ~_BV(PB2);
 1fe:	2a 98       	cbi	0x05, 2	; 5

    /* Set input pins for buttons*/
    DDRD &= ~_BV(PD0);
 200:	50 98       	cbi	0x0a, 0	; 10
	DDRD &= ~_BV(PD1);
 202:	51 98       	cbi	0x0a, 1	; 10
	DDRD &= ~_BV(PD2);
 204:	52 98       	cbi	0x0a, 2	; 10
	DDRD &= ~_BV(PD3);
 206:	53 98       	cbi	0x0a, 3	; 10
	DDRB &= ~_BV(PB5);
 208:	25 98       	cbi	0x04, 5	; 4

    /* Activate internal pull-ups for pins */
    PORTD |= _BV(PD0);
 20a:	58 9a       	sbi	0x0b, 0	; 11
    PORTD |= _BV(PD1);
 20c:	59 9a       	sbi	0x0b, 1	; 11
	PORTD |= _BV(PD2);
 20e:	5a 9a       	sbi	0x0b, 2	; 11
	PORTD |= _BV(PD3);
 210:	5b 9a       	sbi	0x0b, 3	; 11
	PORTB |= _BV(PB5);
 212:	2d 9a       	sbi	0x05, 5	; 5
 214:	08 95       	ret

00000216 <main>:

/**
  * @brief Main function.
  */
int main(void)
{
 216:	cf 93       	push	r28
 218:	df 93       	push	r29
 21a:	cd b7       	in	r28, 0x3d	; 61
 21c:	de b7       	in	r29, 0x3e	; 62
 21e:	2a 97       	sbiw	r28, 0x0a	; 10
 220:	0f b6       	in	r0, 0x3f	; 63
 222:	f8 94       	cli
 224:	de bf       	out	0x3e, r29	; 62
 226:	0f be       	out	0x3f, r0	; 63
 228:	cd bf       	out	0x3d, r28	; 61
    uint8_t run=0,condition=0,time=0, seconds=0, minutes=0, menu1=0, info=1;
    uint16_t i, j;
    char lcd_string[10];

    /* Initializations */
    setup();
 22a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <setup>
    lcd_clrscr();   /* Clear display and set cursor to home position */
 22e:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
    lcd_puts("Informace");  /* Display string */
 232:	80 e0       	ldi	r24, 0x00	; 0
 234:	91 e0       	ldi	r25, 0x01	; 1
 236:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
    lcd_gotoxy(0,1);
 23a:	61 e0       	ldi	r22, 0x01	; 1
 23c:	80 e0       	ldi	r24, 0x00	; 0
 23e:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
    lcd_puts("Vyh. odpovedi");
 242:	8a e0       	ldi	r24, 0x0A	; 10
 244:	91 e0       	ldi	r25, 0x01	; 1
 246:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
    lcd_gotoxy(15,0);   /* Set cursor to specified position */
 24a:	60 e0       	ldi	r22, 0x00	; 0
 24c:	8f e0       	ldi	r24, 0x0F	; 15
 24e:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
    lcd_putc('*');              /* Display cursor * */
 252:	8a e2       	ldi	r24, 0x2A	; 42
 254:	0e 94 9f 00 	call	0x13e	; 0x13e <lcd_putc>
  */
int main(void)
{
    /* Local variables -----------------------------------------------------------*/
    uint8_t number=1,numberSub=0;
    uint8_t run=0,condition=0,time=0, seconds=0, minutes=0, menu1=0, info=1;
 258:	77 24       	eor	r7, r7
 25a:	73 94       	inc	r7
 25c:	c1 2c       	mov	r12, r1
 25e:	b1 2c       	mov	r11, r1
 260:	81 2c       	mov	r8, r1
 262:	91 2c       	mov	r9, r1
 264:	d1 2c       	mov	r13, r1
 266:	f1 2c       	mov	r15, r1
  * @brief Main function.
  */
int main(void)
{
    /* Local variables -----------------------------------------------------------*/
    uint8_t number=1,numberSub=0;
 268:	a1 2c       	mov	r10, r1
 26a:	01 e0       	ldi	r16, 0x01	; 1
                /* If button PD3 (SELECT) is pressed, the application is closed */
                if(bit_is_clear(PIND, 3))
                {
                    PORTB &= ~_BV(PB4);
                    _delay_ms(250);
                    run=2;
 26c:	68 94       	set
 26e:	66 24       	eor	r6, r6
 270:	61 f8       	bld	r6, 1
 272:	e6 2c       	mov	r14, r6
                PORTB |= _BV(PB2);
                _delay_ms(3000);
                PORTB &= ~_BV(PB2);
            }
            /* If button PD3 (SELECT) is pressed, the application is closed */
            if(bit_is_clear(PIND, 3))
 274:	11 e0       	ldi	r17, 0x01	; 1

     /* Forever loop */
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
 276:	4a 99       	sbic	0x09, 2	; 9
 278:	0a c1       	rjmp	.+532    	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
        {
			condition=0;
			time=0;
			menu1=0;
			/* Number stands for the current position in the list */
            number=number+1;
 27a:	0f 5f       	subi	r16, 0xFF	; 255

            /* Overrun control */
            if (number==7)
 27c:	07 30       	cpi	r16, 0x07	; 7
 27e:	91 f0       	breq	.+36     	; 0x2a4 <main+0x8e>
			{
				number = 1;
			}
            switch (number)
 280:	03 30       	cpi	r16, 0x03	; 3
 282:	09 f4       	brne	.+2      	; 0x286 <main+0x70>
 284:	60 c0       	rjmp	.+192    	; 0x346 <main+0x130>
 286:	28 f4       	brcc	.+10     	; 0x292 <main+0x7c>
 288:	01 30       	cpi	r16, 0x01	; 1
 28a:	61 f0       	breq	.+24     	; 0x2a4 <main+0x8e>
 28c:	02 30       	cpi	r16, 0x02	; 2
 28e:	99 f1       	breq	.+102    	; 0x2f6 <main+0xe0>
 290:	fa c0       	rjmp	.+500    	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 292:	05 30       	cpi	r16, 0x05	; 5
 294:	09 f4       	brne	.+2      	; 0x298 <main+0x82>
 296:	a7 c0       	rjmp	.+334    	; 0x3e6 <main+0x1d0>
 298:	08 f4       	brcc	.+2      	; 0x29c <main+0x86>
 29a:	7d c0       	rjmp	.+250    	; 0x396 <main+0x180>
 29c:	06 30       	cpi	r16, 0x06	; 6
 29e:	09 f4       	brne	.+2      	; 0x2a2 <main+0x8c>
 2a0:	ca c0       	rjmp	.+404    	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 2a2:	f1 c0       	rjmp	.+482    	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a4:	2f ef       	ldi	r18, 0xFF	; 255
 2a6:	64 e3       	ldi	r22, 0x34	; 52
 2a8:	8c e0       	ldi	r24, 0x0C	; 12
 2aa:	21 50       	subi	r18, 0x01	; 1
 2ac:	60 40       	sbci	r22, 0x00	; 0
 2ae:	80 40       	sbci	r24, 0x00	; 0
 2b0:	e1 f7       	brne	.-8      	; 0x2aa <main+0x94>
 2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <main+0x9e>
 2b4:	00 00       	nop
            {
                case 1:
                    _delay_ms(250);
                    lcd_gotoxy(0,0);
 2b6:	60 e0       	ldi	r22, 0x00	; 0
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_clrscr();
 2be:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
                    lcd_puts("Informace");
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	91 e0       	ldi	r25, 0x01	; 1
 2c6:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    lcd_gotoxy(0,1);
 2ca:	61 2f       	mov	r22, r17
 2cc:	80 e0       	ldi	r24, 0x00	; 0
 2ce:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_puts("Vyh. odpovedi");
 2d2:	8a e0       	ldi	r24, 0x0A	; 10
 2d4:	91 e0       	ldi	r25, 0x01	; 1
 2d6:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    lcd_gotoxy(15,0);
 2da:	60 e0       	ldi	r22, 0x00	; 0
 2dc:	8f e0       	ldi	r24, 0x0F	; 15
 2de:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_putc('*');
 2e2:	8a e2       	ldi	r24, 0x2A	; 42
 2e4:	0e 94 9f 00 	call	0x13e	; 0x13e <lcd_putc>
                default:
                    number = 1;
            }  /* End of switch (number) */
        }
        /* Button SELECT at PD3 to choose from the list */
        if(bit_is_clear(PIND,3))
 2e8:	4b 9b       	sbis	0x09, 3	; 9
 2ea:	e6 c0       	rjmp	.+460    	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
			menu1=0;
 2ec:	c1 2c       	mov	r12, r1
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
 2ee:	91 2c       	mov	r9, r1
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
 2f0:	d1 2c       	mov	r13, r1
                default:
                    number = 1;
            }  /* End of switch (number) */
        }
        /* Button SELECT at PD3 to choose from the list */
        if(bit_is_clear(PIND,3))
 2f2:	01 e0       	ldi	r16, 0x01	; 1
 2f4:	72 c1       	rjmp	.+740    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 2f6:	9f ef       	ldi	r25, 0xFF	; 255
 2f8:	e4 e3       	ldi	r30, 0x34	; 52
 2fa:	2c e0       	ldi	r18, 0x0C	; 12
 2fc:	91 50       	subi	r25, 0x01	; 1
 2fe:	e0 40       	sbci	r30, 0x00	; 0
 300:	20 40       	sbci	r18, 0x00	; 0
 302:	e1 f7       	brne	.-8      	; 0x2fc <main+0xe6>
 304:	00 c0       	rjmp	.+0      	; 0x306 <main+0xf0>
 306:	00 00       	nop
                    lcd_putc('*');
					break;

                case 2:
                    _delay_ms(250);
                    lcd_gotoxy(0,0);
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_clrscr();
 310:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
                    lcd_puts("Informace");
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	91 e0       	ldi	r25, 0x01	; 1
 318:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    lcd_gotoxy(0,1);
 31c:	61 2f       	mov	r22, r17
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_puts("Vyh. odpovedi");
 324:	8a e0       	ldi	r24, 0x0A	; 10
 326:	91 e0       	ldi	r25, 0x01	; 1
 328:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    lcd_gotoxy(15,1);
 32c:	61 2f       	mov	r22, r17
 32e:	8f e0       	ldi	r24, 0x0F	; 15
 330:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_putc('*');
 334:	8a e2       	ldi	r24, 0x2A	; 42
 336:	0e 94 9f 00 	call	0x13e	; 0x13e <lcd_putc>
                default:
                    number = 1;
            }  /* End of switch (number) */
        }
        /* Button SELECT at PD3 to choose from the list */
        if(bit_is_clear(PIND,3))
 33a:	4b 9b       	sbis	0x09, 3	; 9
 33c:	e0 c0       	rjmp	.+448    	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
			menu1=0;
 33e:	c1 2c       	mov	r12, r1
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
 340:	91 2c       	mov	r9, r1
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
 342:	d1 2c       	mov	r13, r1
 344:	4a c1       	rjmp	.+660    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 346:	6f ef       	ldi	r22, 0xFF	; 255
 348:	84 e3       	ldi	r24, 0x34	; 52
 34a:	9c e0       	ldi	r25, 0x0C	; 12
 34c:	61 50       	subi	r22, 0x01	; 1
 34e:	80 40       	sbci	r24, 0x00	; 0
 350:	90 40       	sbci	r25, 0x00	; 0
 352:	e1 f7       	brne	.-8      	; 0x34c <main+0x136>
 354:	00 c0       	rjmp	.+0      	; 0x356 <main+0x140>
 356:	00 00       	nop
                    lcd_putc('*');
					break;

                case 3:
                    _delay_ms(250);
                    lcd_gotoxy(0,0);
 358:	60 e0       	ldi	r22, 0x00	; 0
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_clrscr();
 360:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
                    lcd_puts("Podmenu");
 364:	88 e1       	ldi	r24, 0x18	; 24
 366:	91 e0       	ldi	r25, 0x01	; 1
 368:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    lcd_gotoxy(0,1);
 36c:	61 2f       	mov	r22, r17
 36e:	80 e0       	ldi	r24, 0x00	; 0
 370:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_puts("Odpocet");
 374:	80 e2       	ldi	r24, 0x20	; 32
 376:	91 e0       	ldi	r25, 0x01	; 1
 378:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    lcd_gotoxy(15,0);
 37c:	60 e0       	ldi	r22, 0x00	; 0
 37e:	8f e0       	ldi	r24, 0x0F	; 15
 380:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_putc('*');
 384:	8a e2       	ldi	r24, 0x2A	; 42
 386:	0e 94 9f 00 	call	0x13e	; 0x13e <lcd_putc>
                default:
                    number = 1;
            }  /* End of switch (number) */
        }
        /* Button SELECT at PD3 to choose from the list */
        if(bit_is_clear(PIND,3))
 38a:	4b 9b       	sbis	0x09, 3	; 9
 38c:	d2 c0       	rjmp	.+420    	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
			menu1=0;
 38e:	c1 2c       	mov	r12, r1
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
 390:	91 2c       	mov	r9, r1
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
 392:	d1 2c       	mov	r13, r1
 394:	22 c1       	rjmp	.+580    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 396:	ef ef       	ldi	r30, 0xFF	; 255
 398:	24 e3       	ldi	r18, 0x34	; 52
 39a:	6c e0       	ldi	r22, 0x0C	; 12
 39c:	e1 50       	subi	r30, 0x01	; 1
 39e:	20 40       	sbci	r18, 0x00	; 0
 3a0:	60 40       	sbci	r22, 0x00	; 0
 3a2:	e1 f7       	brne	.-8      	; 0x39c <main+0x186>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <main+0x190>
 3a6:	00 00       	nop
                    lcd_putc('*');
                    break;

                case 4:
                    _delay_ms(250);
                    lcd_gotoxy(0,0);
 3a8:	60 e0       	ldi	r22, 0x00	; 0
 3aa:	80 e0       	ldi	r24, 0x00	; 0
 3ac:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_clrscr();
 3b0:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
                    lcd_puts("Podmenu");
 3b4:	88 e1       	ldi	r24, 0x18	; 24
 3b6:	91 e0       	ldi	r25, 0x01	; 1
 3b8:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    lcd_gotoxy(0,1);
 3bc:	61 2f       	mov	r22, r17
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_puts("Odpocet");
 3c4:	80 e2       	ldi	r24, 0x20	; 32
 3c6:	91 e0       	ldi	r25, 0x01	; 1
 3c8:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    lcd_gotoxy(15,1);
 3cc:	61 2f       	mov	r22, r17
 3ce:	8f e0       	ldi	r24, 0x0F	; 15
 3d0:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_putc('*');
 3d4:	8a e2       	ldi	r24, 0x2A	; 42
 3d6:	0e 94 9f 00 	call	0x13e	; 0x13e <lcd_putc>
                default:
                    number = 1;
            }  /* End of switch (number) */
        }
        /* Button SELECT at PD3 to choose from the list */
        if(bit_is_clear(PIND,3))
 3da:	4b 9b       	sbis	0x09, 3	; 9
 3dc:	c5 c0       	rjmp	.+394    	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
			menu1=0;
 3de:	c1 2c       	mov	r12, r1
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
 3e0:	91 2c       	mov	r9, r1
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
 3e2:	d1 2c       	mov	r13, r1
 3e4:	fa c0       	rjmp	.+500    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 3e6:	8f ef       	ldi	r24, 0xFF	; 255
 3e8:	94 e3       	ldi	r25, 0x34	; 52
 3ea:	ec e0       	ldi	r30, 0x0C	; 12
 3ec:	81 50       	subi	r24, 0x01	; 1
 3ee:	90 40       	sbci	r25, 0x00	; 0
 3f0:	e0 40       	sbci	r30, 0x00	; 0
 3f2:	e1 f7       	brne	.-8      	; 0x3ec <main+0x1d6>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <main+0x1e0>
 3f6:	00 00       	nop
                    lcd_putc('*');
                    break;

                case 5:
                    _delay_ms(250);
                    lcd_gotoxy(0,0);
 3f8:	60 e0       	ldi	r22, 0x00	; 0
 3fa:	80 e0       	ldi	r24, 0x00	; 0
 3fc:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_clrscr();
 400:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
                    lcd_puts("Volny slot-1");
 404:	88 e2       	ldi	r24, 0x28	; 40
 406:	91 e0       	ldi	r25, 0x01	; 1
 408:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    lcd_gotoxy(0,1);
 40c:	61 2f       	mov	r22, r17
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_puts("Volny slot-2");
 414:	85 e3       	ldi	r24, 0x35	; 53
 416:	91 e0       	ldi	r25, 0x01	; 1
 418:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    lcd_gotoxy(15,0);
 41c:	60 e0       	ldi	r22, 0x00	; 0
 41e:	8f e0       	ldi	r24, 0x0F	; 15
 420:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_putc('*');
 424:	8a e2       	ldi	r24, 0x2A	; 42
 426:	0e 94 9f 00 	call	0x13e	; 0x13e <lcd_putc>
                default:
                    number = 1;
            }  /* End of switch (number) */
        }
        /* Button SELECT at PD3 to choose from the list */
        if(bit_is_clear(PIND,3))
 42a:	4b 9b       	sbis	0x09, 3	; 9
 42c:	af c0       	rjmp	.+350    	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
			menu1=0;
 42e:	c1 2c       	mov	r12, r1
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
 430:	91 2c       	mov	r9, r1
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
 432:	d1 2c       	mov	r13, r1
 434:	d2 c0       	rjmp	.+420    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 436:	2f ef       	ldi	r18, 0xFF	; 255
 438:	64 e3       	ldi	r22, 0x34	; 52
 43a:	8c e0       	ldi	r24, 0x0C	; 12
 43c:	21 50       	subi	r18, 0x01	; 1
 43e:	60 40       	sbci	r22, 0x00	; 0
 440:	80 40       	sbci	r24, 0x00	; 0
 442:	e1 f7       	brne	.-8      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 444:	00 c0       	rjmp	.+0      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 446:	00 00       	nop
                    lcd_putc('*');
					break;

                case 6:
                    _delay_ms(250);
                    lcd_gotoxy(0,0);
 448:	60 e0       	ldi	r22, 0x00	; 0
 44a:	80 e0       	ldi	r24, 0x00	; 0
 44c:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_clrscr();
 450:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
                    lcd_puts("Volny slot-1");
 454:	88 e2       	ldi	r24, 0x28	; 40
 456:	91 e0       	ldi	r25, 0x01	; 1
 458:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    lcd_gotoxy(0,1);
 45c:	61 2f       	mov	r22, r17
 45e:	80 e0       	ldi	r24, 0x00	; 0
 460:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_puts("Volny slot-2");
 464:	85 e3       	ldi	r24, 0x35	; 53
 466:	91 e0       	ldi	r25, 0x01	; 1
 468:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    lcd_gotoxy(15,1);
 46c:	61 2f       	mov	r22, r17
 46e:	8f e0       	ldi	r24, 0x0F	; 15
 470:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                    lcd_putc('*');
 474:	8a e2       	ldi	r24, 0x2A	; 42
 476:	0e 94 9f 00 	call	0x13e	; 0x13e <lcd_putc>
                default:
                    number = 1;
            }  /* End of switch (number) */
        }
        /* Button SELECT at PD3 to choose from the list */
        if(bit_is_clear(PIND,3))
 47a:	4b 9b       	sbis	0x09, 3	; 9
 47c:	96 c0       	rjmp	.+300    	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
			menu1=0;
 47e:	c1 2c       	mov	r12, r1
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
 480:	91 2c       	mov	r9, r1
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
 482:	d1 2c       	mov	r13, r1
 484:	aa c0       	rjmp	.+340    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
			time=0;
			menu1=0;
 486:	c1 2c       	mov	r12, r1
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
 488:	91 2c       	mov	r9, r1
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
 48a:	d1 2c       	mov	r13, r1
                    lcd_gotoxy(15,1);
                    lcd_putc('*');
					break;

                default:
                    number = 1;
 48c:	01 e0       	ldi	r16, 0x01	; 1
            }  /* End of switch (number) */
        }
        /* Button SELECT at PD3 to choose from the list */
        if(bit_is_clear(PIND,3))
 48e:	4b 99       	sbic	0x09, 3	; 9
 490:	a4 c0       	rjmp	.+328    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
        {
            switch (number)
 492:	03 30       	cpi	r16, 0x03	; 3
 494:	09 f4       	brne	.+2      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 496:	50 c0       	rjmp	.+160    	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 498:	30 f4       	brcc	.+12     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 49a:	01 30       	cpi	r16, 0x01	; 1
 49c:	81 f0       	breq	.+32     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 49e:	02 30       	cpi	r16, 0x02	; 2
 4a0:	09 f0       	breq	.+2      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 4a2:	92 c0       	rjmp	.+292    	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 4a4:	2f c0       	rjmp	.+94     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4a6:	05 30       	cpi	r16, 0x05	; 5
 4a8:	09 f4       	brne	.+2      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4aa:	73 c0       	rjmp	.+230    	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 4ac:	08 f4       	brcc	.+2      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4ae:	5f c0       	rjmp	.+190    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 4b0:	06 30       	cpi	r16, 0x06	; 6
 4b2:	09 f4       	brne	.+2      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4b4:	7d c0       	rjmp	.+250    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 4b6:	88 c0       	rjmp	.+272    	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
			menu1=0;
 4b8:	c1 2c       	mov	r12, r1
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
 4ba:	91 2c       	mov	r9, r1
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
 4bc:	d1 2c       	mov	r13, r1
        if(bit_is_clear(PIND,3))
        {
            switch (number)
			{
				case 1:
					lcd_clrscr();
 4be:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
					lcd_gotoxy(0,0);
 4c2:	60 e0       	ldi	r22, 0x00	; 0
 4c4:	80 e0       	ldi	r24, 0x00	; 0
 4c6:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
					lcd_puts("INFORMACE:");
 4ca:	82 e4       	ldi	r24, 0x42	; 66
 4cc:	91 e0       	ldi	r25, 0x01	; 1
 4ce:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
					lcd_gotoxy(0,1);
 4d2:	61 2f       	mov	r22, r17
 4d4:	80 e0       	ldi	r24, 0x00	; 0
 4d6:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
					lcd_puts("Pouzity Hardware:");
 4da:	8d e4       	ldi	r24, 0x4D	; 77
 4dc:	91 e0       	ldi	r25, 0x01	; 1
 4de:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>

					if(bit_is_clear(PIND,3))
 4e2:	4b 99       	sbic	0x09, 3	; 9
 4e4:	73 c0       	rjmp	.+230    	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 4e6:	9f ef       	ldi	r25, 0xFF	; 255
 4e8:	e4 e3       	ldi	r30, 0x34	; 52
 4ea:	2c e0       	ldi	r18, 0x0C	; 12
 4ec:	91 50       	subi	r25, 0x01	; 1
 4ee:	e0 40       	sbci	r30, 0x00	; 0
 4f0:	20 40       	sbci	r18, 0x00	; 0
 4f2:	e1 f7       	brne	.-8      	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4f4:	00 c0       	rjmp	.+0      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f6:	00 00       	nop
					{
						_delay_ms(250);
						menu1=1;    /* Set menu1 to 1 for browsing through the list of components */
 4f8:	c1 2e       	mov	r12, r17
 4fa:	01 e0       	ldi	r16, 0x01	; 1
 4fc:	6e c0       	rjmp	.+220    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
			menu1=0;
 4fe:	c1 2c       	mov	r12, r1
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
 500:	91 2c       	mov	r9, r1
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
 502:	d1 2c       	mov	r13, r1
						menu1=1;    /* Set menu1 to 1 for browsing through the list of components */
					}
                    break;

				case 2:
					lcd_clrscr();
 504:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
					lcd_gotoxy(0,0);
 508:	60 e0       	ldi	r22, 0x00	; 0
 50a:	80 e0       	ldi	r24, 0x00	; 0
 50c:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
					lcd_puts("Vyh. odpovedi");
 510:	8a e0       	ldi	r24, 0x0A	; 10
 512:	91 e0       	ldi	r25, 0x01	; 1
 514:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>

					if(bit_is_clear(PIND,3))
 518:	4b 99       	sbic	0x09, 3	; 9
 51a:	5a c0       	rjmp	.+180    	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 51c:	6f ef       	ldi	r22, 0xFF	; 255
 51e:	84 e3       	ldi	r24, 0x34	; 52
 520:	9c e0       	ldi	r25, 0x0C	; 12
 522:	61 50       	subi	r22, 0x01	; 1
 524:	80 40       	sbci	r24, 0x00	; 0
 526:	90 40       	sbci	r25, 0x00	; 0
 528:	e1 f7       	brne	.-8      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 52a:	00 c0       	rjmp	.+0      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 52c:	00 00       	nop
 52e:	02 e0       	ldi	r16, 0x02	; 2
 530:	57 c0       	rjmp	.+174    	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
			menu1=0;
 532:	c1 2c       	mov	r12, r1
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
 534:	91 2c       	mov	r9, r1
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
 536:	d1 2c       	mov	r13, r1
						run=1;  /* Set run to 1 for start of decision application with LEDs */
					}
                    break;

				case 3:
					lcd_clrscr();
 538:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
					lcd_gotoxy(0,0);
 53c:	60 e0       	ldi	r22, 0x00	; 0
 53e:	80 e0       	ldi	r24, 0x00	; 0
 540:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
					lcd_puts("POD menu");
 544:	8f e5       	ldi	r24, 0x5F	; 95
 546:	91 e0       	ldi	r25, 0x01	; 1
 548:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>

					if(bit_is_clear(PIND,3))
 54c:	4b 99       	sbic	0x09, 3	; 9
 54e:	42 c0       	rjmp	.+132    	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 550:	ef ef       	ldi	r30, 0xFF	; 255
 552:	24 e3       	ldi	r18, 0x34	; 52
 554:	6c e0       	ldi	r22, 0x0C	; 12
 556:	e1 50       	subi	r30, 0x01	; 1
 558:	20 40       	sbci	r18, 0x00	; 0
 55a:	60 40       	sbci	r22, 0x00	; 0
 55c:	e1 f7       	brne	.-8      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 55e:	00 c0       	rjmp	.+0      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 560:	00 00       	nop
					{
						_delay_ms(250);
						condition=1; /* Set condition to 1 to show submenu example */
 562:	d1 2e       	mov	r13, r17
 564:	03 e0       	ldi	r16, 0x03	; 3
 566:	39 c0       	rjmp	.+114    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
			menu1=0;
 568:	c1 2c       	mov	r12, r1
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
 56a:	91 2c       	mov	r9, r1
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
 56c:	d1 2c       	mov	r13, r1
						condition=1; /* Set condition to 1 to show submenu example */
					}
                    break;

				case 4:
					lcd_clrscr();
 56e:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
					lcd_gotoxy(0,0);
 572:	60 e0       	ldi	r22, 0x00	; 0
 574:	80 e0       	ldi	r24, 0x00	; 0
 576:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
					lcd_puts("Nastaveni casu:");
 57a:	88 e6       	ldi	r24, 0x68	; 104
 57c:	91 e0       	ldi	r25, 0x01	; 1
 57e:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>

					if(bit_is_clear(PIND, 3))
 582:	4b 99       	sbic	0x09, 3	; 9
 584:	29 c0       	rjmp	.+82     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
					{
						time=1; /* Set time to 1 to set the countdown */
 586:	91 2e       	mov	r9, r17
				case 4:
					lcd_clrscr();
					lcd_gotoxy(0,0);
					lcd_puts("Nastaveni casu:");

					if(bit_is_clear(PIND, 3))
 588:	04 e0       	ldi	r16, 0x04	; 4
 58a:	27 c0       	rjmp	.+78     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
			menu1=0;
 58c:	c1 2c       	mov	r12, r1
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
 58e:	91 2c       	mov	r9, r1
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
 590:	d1 2c       	mov	r13, r1
						time=1; /* Set time to 1 to set the countdown */
					}
                    break;

				case 5:
					lcd_clrscr();
 592:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
					lcd_gotoxy(0,0);
 596:	60 e0       	ldi	r22, 0x00	; 0
 598:	80 e0       	ldi	r24, 0x00	; 0
 59a:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
					lcd_puts("POD menu-5");
 59e:	88 e7       	ldi	r24, 0x78	; 120
 5a0:	91 e0       	ldi	r25, 0x01	; 1
 5a2:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    break;
 5a6:	05 e0       	ldi	r16, 0x05	; 5
 5a8:	18 c0       	rjmp	.+48     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
			menu1=0;
 5aa:	c1 2c       	mov	r12, r1
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
			time=0;
 5ac:	91 2c       	mov	r9, r1
    while (1)
    {
        /* Button DOWN at PD2 to scroll through the list */
        if(bit_is_clear(PIND,2))
        {
			condition=0;
 5ae:	d1 2c       	mov	r13, r1
					lcd_gotoxy(0,0);
					lcd_puts("POD menu-5");
                    break;

				case 6:
					lcd_clrscr();
 5b0:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
					lcd_gotoxy(0,0);
 5b4:	60 e0       	ldi	r22, 0x00	; 0
 5b6:	80 e0       	ldi	r24, 0x00	; 0
 5b8:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
					lcd_puts("POD menu-6");
 5bc:	83 e8       	ldi	r24, 0x83	; 131
 5be:	91 e0       	ldi	r25, 0x01	; 1
 5c0:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                    break;
 5c4:	06 e0       	ldi	r16, 0x06	; 6
 5c6:	09 c0       	rjmp	.+18     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>

				default:
                        number = 1;
 5c8:	01 e0       	ldi	r16, 0x01	; 1
 5ca:	07 c0       	rjmp	.+14     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5cc:	01 e0       	ldi	r16, 0x01	; 1
 5ce:	05 c0       	rjmp	.+10     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5d0:	02 e0       	ldi	r16, 0x02	; 2
 5d2:	03 c0       	rjmp	.+6      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5d4:	03 e0       	ldi	r16, 0x03	; 3
 5d6:	01 c0       	rjmp	.+2      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5d8:	04 e0       	ldi	r16, 0x04	; 4
			}
        }  /* End of switch (number) */
        /* If the condition is met, the evaluation application starts */
        if(run==1)
 5da:	81 e0       	ldi	r24, 0x01	; 1
 5dc:	f8 12       	cpse	r15, r24
 5de:	b7 c1       	rjmp	.+878    	; 0x94e <__stack+0x4f>
        {
            /* Green LEDs controled by button on PD0 */
            if (bit_is_clear(PIND, 0))
 5e0:	48 99       	sbic	0x09, 0	; 9
 5e2:	34 c0       	rjmp	.+104    	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
            {
                PORTB &= ~_BV(PB4);
 5e4:	2c 98       	cbi	0x05, 4	; 5
                PORTB |= _BV(PB3);
 5e6:	2b 9a       	sbi	0x05, 3	; 5
 5e8:	9f ef       	ldi	r25, 0xFF	; 255
 5ea:	e3 ed       	ldi	r30, 0xD3	; 211
 5ec:	20 e3       	ldi	r18, 0x30	; 48
 5ee:	91 50       	subi	r25, 0x01	; 1
 5f0:	e0 40       	sbci	r30, 0x00	; 0
 5f2:	20 40       	sbci	r18, 0x00	; 0
 5f4:	e1 f7       	brne	.-8      	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5f6:	00 c0       	rjmp	.+0      	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5f8:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~_BV(PB3);
 5fa:	2b 98       	cbi	0x05, 3	; 5
 5fc:	6f ef       	ldi	r22, 0xFF	; 255
 5fe:	83 ed       	ldi	r24, 0xD3	; 211
 600:	90 e3       	ldi	r25, 0x30	; 48
 602:	61 50       	subi	r22, 0x01	; 1
 604:	80 40       	sbci	r24, 0x00	; 0
 606:	90 40       	sbci	r25, 0x00	; 0
 608:	e1 f7       	brne	.-8      	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 60a:	00 c0       	rjmp	.+0      	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 60c:	00 00       	nop
                _delay_ms(1000);
                PORTB |= _BV(PB3);
 60e:	2b 9a       	sbi	0x05, 3	; 5
 610:	ef ef       	ldi	r30, 0xFF	; 255
 612:	23 ed       	ldi	r18, 0xD3	; 211
 614:	60 e3       	ldi	r22, 0x30	; 48
 616:	e1 50       	subi	r30, 0x01	; 1
 618:	20 40       	sbci	r18, 0x00	; 0
 61a:	60 40       	sbci	r22, 0x00	; 0
 61c:	e1 f7       	brne	.-8      	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 61e:	00 c0       	rjmp	.+0      	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 620:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~_BV(PB3);
 622:	2b 98       	cbi	0x05, 3	; 5
 624:	8f ef       	ldi	r24, 0xFF	; 255
 626:	93 ed       	ldi	r25, 0xD3	; 211
 628:	e0 e3       	ldi	r30, 0x30	; 48
 62a:	81 50       	subi	r24, 0x01	; 1
 62c:	90 40       	sbci	r25, 0x00	; 0
 62e:	e0 40       	sbci	r30, 0x00	; 0
 630:	e1 f7       	brne	.-8      	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 632:	00 c0       	rjmp	.+0      	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 634:	00 00       	nop
                _delay_ms(1000);
                PORTB |= _BV(PB3);
 636:	2b 9a       	sbi	0x05, 3	; 5
 638:	2f ef       	ldi	r18, 0xFF	; 255
 63a:	6b e7       	ldi	r22, 0x7B	; 123
 63c:	82 e9       	ldi	r24, 0x92	; 146
 63e:	21 50       	subi	r18, 0x01	; 1
 640:	60 40       	sbci	r22, 0x00	; 0
 642:	80 40       	sbci	r24, 0x00	; 0
 644:	e1 f7       	brne	.-8      	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 646:	00 c0       	rjmp	.+0      	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 648:	00 00       	nop
                _delay_ms(3000);
                PORTB &= ~_BV(PB3);
 64a:	2b 98       	cbi	0x05, 3	; 5
            }

            /* Red LEDs controled by button on PD1*/
            if (bit_is_clear(PIND, 1))
 64c:	49 99       	sbic	0x09, 1	; 9
 64e:	01 c4       	rjmp	.+2050   	; 0xe52 <__stack+0x553>
            {
                PORTB &= ~_BV(PB4);
 650:	2c 98       	cbi	0x05, 4	; 5
                PORTB |= _BV(PB2);
 652:	2a 9a       	sbi	0x05, 2	; 5
 654:	9f ef       	ldi	r25, 0xFF	; 255
 656:	e3 ed       	ldi	r30, 0xD3	; 211
 658:	20 e3       	ldi	r18, 0x30	; 48
 65a:	91 50       	subi	r25, 0x01	; 1
 65c:	e0 40       	sbci	r30, 0x00	; 0
 65e:	20 40       	sbci	r18, 0x00	; 0
 660:	e1 f7       	brne	.-8      	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 662:	00 c0       	rjmp	.+0      	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 664:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~_BV(PB2);
 666:	2a 98       	cbi	0x05, 2	; 5
 668:	6f ef       	ldi	r22, 0xFF	; 255
 66a:	83 ed       	ldi	r24, 0xD3	; 211
 66c:	90 e3       	ldi	r25, 0x30	; 48
 66e:	61 50       	subi	r22, 0x01	; 1
 670:	80 40       	sbci	r24, 0x00	; 0
 672:	90 40       	sbci	r25, 0x00	; 0
 674:	e1 f7       	brne	.-8      	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 676:	00 c0       	rjmp	.+0      	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 678:	00 00       	nop
                _delay_ms(1000);
                PORTB |= _BV(PB2);
 67a:	2a 9a       	sbi	0x05, 2	; 5
 67c:	ef ef       	ldi	r30, 0xFF	; 255
 67e:	23 ed       	ldi	r18, 0xD3	; 211
 680:	60 e3       	ldi	r22, 0x30	; 48
 682:	e1 50       	subi	r30, 0x01	; 1
 684:	20 40       	sbci	r18, 0x00	; 0
 686:	60 40       	sbci	r22, 0x00	; 0
 688:	e1 f7       	brne	.-8      	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 68a:	00 c0       	rjmp	.+0      	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 68c:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~_BV(PB2);
 68e:	2a 98       	cbi	0x05, 2	; 5
 690:	8f ef       	ldi	r24, 0xFF	; 255
 692:	93 ed       	ldi	r25, 0xD3	; 211
 694:	e0 e3       	ldi	r30, 0x30	; 48
 696:	81 50       	subi	r24, 0x01	; 1
 698:	90 40       	sbci	r25, 0x00	; 0
 69a:	e0 40       	sbci	r30, 0x00	; 0
 69c:	e1 f7       	brne	.-8      	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 69e:	00 c0       	rjmp	.+0      	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 6a0:	00 00       	nop
                _delay_ms(1000);
                PORTB |= _BV(PB2);
 6a2:	2a 9a       	sbi	0x05, 2	; 5
 6a4:	2f ef       	ldi	r18, 0xFF	; 255
 6a6:	6b e7       	ldi	r22, 0x7B	; 123
 6a8:	82 e9       	ldi	r24, 0x92	; 146
 6aa:	21 50       	subi	r18, 0x01	; 1
 6ac:	60 40       	sbci	r22, 0x00	; 0
 6ae:	80 40       	sbci	r24, 0x00	; 0
 6b0:	e1 f7       	brne	.-8      	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 6b2:	00 c0       	rjmp	.+0      	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6b4:	00 00       	nop
                _delay_ms(3000);
                PORTB &= ~_BV(PB2);
 6b6:	2a 98       	cbi	0x05, 2	; 5
 6b8:	cc c3       	rjmp	.+1944   	; 0xe52 <__stack+0x553>
            }
            /* If button PD3 (SELECT) is pressed, the application is closed */
            if(bit_is_clear(PIND, 3))
            {
                PORTB &= ~_BV(PB4);
 6ba:	2c 98       	cbi	0x05, 4	; 5
 6bc:	9f ef       	ldi	r25, 0xFF	; 255
 6be:	e4 e3       	ldi	r30, 0x34	; 52
 6c0:	2c e0       	ldi	r18, 0x0C	; 12
 6c2:	91 50       	subi	r25, 0x01	; 1
 6c4:	e0 40       	sbci	r30, 0x00	; 0
 6c6:	20 40       	sbci	r18, 0x00	; 0
 6c8:	e1 f7       	brne	.-8      	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
 6ca:	00 c0       	rjmp	.+0      	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
 6cc:	00 00       	nop
                _delay_ms(250);
                run=2;          /* Turn off the evaluation application */
 6ce:	f6 2c       	mov	r15, r6
 6d0:	c8 c3       	rjmp	.+1936   	; 0xe62 <__stack+0x563>

            else
            for (i = 1; i < N; i++)
			{
			    /* Green LEDs controled by button on PD0*/
				if (bit_is_clear(PIND, 0))
 6d2:	48 99       	sbic	0x09, 0	; 9
 6d4:	34 c0       	rjmp	.+104    	; 0x73e <__LOCK_REGION_LENGTH__+0x33e>
                {
                    PORTB &= ~_BV(PB4);
 6d6:	2c 98       	cbi	0x05, 4	; 5
                    PORTB |= _BV(PB3);
 6d8:	2b 9a       	sbi	0x05, 3	; 5
 6da:	6f ef       	ldi	r22, 0xFF	; 255
 6dc:	83 ed       	ldi	r24, 0xD3	; 211
 6de:	90 e3       	ldi	r25, 0x30	; 48
 6e0:	61 50       	subi	r22, 0x01	; 1
 6e2:	80 40       	sbci	r24, 0x00	; 0
 6e4:	90 40       	sbci	r25, 0x00	; 0
 6e6:	e1 f7       	brne	.-8      	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
 6e8:	00 c0       	rjmp	.+0      	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6ea:	00 00       	nop
                    _delay_ms(1000);
                    PORTB &= ~_BV(PB3);
 6ec:	2b 98       	cbi	0x05, 3	; 5
 6ee:	ef ef       	ldi	r30, 0xFF	; 255
 6f0:	63 ed       	ldi	r22, 0xD3	; 211
 6f2:	80 e3       	ldi	r24, 0x30	; 48
 6f4:	e1 50       	subi	r30, 0x01	; 1
 6f6:	60 40       	sbci	r22, 0x00	; 0
 6f8:	80 40       	sbci	r24, 0x00	; 0
 6fa:	e1 f7       	brne	.-8      	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 6fc:	00 c0       	rjmp	.+0      	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 6fe:	00 00       	nop
                    _delay_ms(1000);
                    PORTB |= _BV(PB3);
 700:	2b 9a       	sbi	0x05, 3	; 5
 702:	9f ef       	ldi	r25, 0xFF	; 255
 704:	e3 ed       	ldi	r30, 0xD3	; 211
 706:	60 e3       	ldi	r22, 0x30	; 48
 708:	91 50       	subi	r25, 0x01	; 1
 70a:	e0 40       	sbci	r30, 0x00	; 0
 70c:	60 40       	sbci	r22, 0x00	; 0
 70e:	e1 f7       	brne	.-8      	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
 710:	00 c0       	rjmp	.+0      	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
 712:	00 00       	nop
                    _delay_ms(1000);
                    PORTB &= ~_BV(PB3);
 714:	2b 98       	cbi	0x05, 3	; 5
 716:	8f ef       	ldi	r24, 0xFF	; 255
 718:	93 ed       	ldi	r25, 0xD3	; 211
 71a:	e0 e3       	ldi	r30, 0x30	; 48
 71c:	81 50       	subi	r24, 0x01	; 1
 71e:	90 40       	sbci	r25, 0x00	; 0
 720:	e0 40       	sbci	r30, 0x00	; 0
 722:	e1 f7       	brne	.-8      	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 724:	00 c0       	rjmp	.+0      	; 0x726 <__LOCK_REGION_LENGTH__+0x326>
 726:	00 00       	nop
                    _delay_ms(1000);
                    PORTB |= _BV(PB3);
 728:	2b 9a       	sbi	0x05, 3	; 5
 72a:	6f ef       	ldi	r22, 0xFF	; 255
 72c:	8b e7       	ldi	r24, 0x7B	; 123
 72e:	92 e9       	ldi	r25, 0x92	; 146
 730:	61 50       	subi	r22, 0x01	; 1
 732:	80 40       	sbci	r24, 0x00	; 0
 734:	90 40       	sbci	r25, 0x00	; 0
 736:	e1 f7       	brne	.-8      	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
 738:	00 c0       	rjmp	.+0      	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
 73a:	00 00       	nop
                    _delay_ms(3000);
                    PORTB &= ~_BV(PB3);
 73c:	2b 98       	cbi	0x05, 3	; 5
                }

                /* Red LEDs controled by button on PD1*/
                if (bit_is_clear(PIND, 1))
 73e:	49 99       	sbic	0x09, 1	; 9
 740:	34 c0       	rjmp	.+104    	; 0x7aa <__LOCK_REGION_LENGTH__+0x3aa>
                {
                    PORTB &= ~_BV(PB4);
 742:	2c 98       	cbi	0x05, 4	; 5
                    PORTB |= _BV(PB2);
 744:	2a 9a       	sbi	0x05, 2	; 5
 746:	ef ef       	ldi	r30, 0xFF	; 255
 748:	63 ed       	ldi	r22, 0xD3	; 211
 74a:	80 e3       	ldi	r24, 0x30	; 48
 74c:	e1 50       	subi	r30, 0x01	; 1
 74e:	60 40       	sbci	r22, 0x00	; 0
 750:	80 40       	sbci	r24, 0x00	; 0
 752:	e1 f7       	brne	.-8      	; 0x74c <__LOCK_REGION_LENGTH__+0x34c>
 754:	00 c0       	rjmp	.+0      	; 0x756 <__LOCK_REGION_LENGTH__+0x356>
 756:	00 00       	nop
                    _delay_ms(1000);
                    PORTB &= ~_BV(PB2);
 758:	2a 98       	cbi	0x05, 2	; 5
 75a:	9f ef       	ldi	r25, 0xFF	; 255
 75c:	e3 ed       	ldi	r30, 0xD3	; 211
 75e:	60 e3       	ldi	r22, 0x30	; 48
 760:	91 50       	subi	r25, 0x01	; 1
 762:	e0 40       	sbci	r30, 0x00	; 0
 764:	60 40       	sbci	r22, 0x00	; 0
 766:	e1 f7       	brne	.-8      	; 0x760 <__LOCK_REGION_LENGTH__+0x360>
 768:	00 c0       	rjmp	.+0      	; 0x76a <__LOCK_REGION_LENGTH__+0x36a>
 76a:	00 00       	nop
                    _delay_ms(1000);
                    PORTB |= _BV(PB2);
 76c:	2a 9a       	sbi	0x05, 2	; 5
 76e:	8f ef       	ldi	r24, 0xFF	; 255
 770:	93 ed       	ldi	r25, 0xD3	; 211
 772:	e0 e3       	ldi	r30, 0x30	; 48
 774:	81 50       	subi	r24, 0x01	; 1
 776:	90 40       	sbci	r25, 0x00	; 0
 778:	e0 40       	sbci	r30, 0x00	; 0
 77a:	e1 f7       	brne	.-8      	; 0x774 <__LOCK_REGION_LENGTH__+0x374>
 77c:	00 c0       	rjmp	.+0      	; 0x77e <__LOCK_REGION_LENGTH__+0x37e>
 77e:	00 00       	nop
                    _delay_ms(1000);
                    PORTB &= ~_BV(PB2);
 780:	2a 98       	cbi	0x05, 2	; 5
 782:	6f ef       	ldi	r22, 0xFF	; 255
 784:	83 ed       	ldi	r24, 0xD3	; 211
 786:	90 e3       	ldi	r25, 0x30	; 48
 788:	61 50       	subi	r22, 0x01	; 1
 78a:	80 40       	sbci	r24, 0x00	; 0
 78c:	90 40       	sbci	r25, 0x00	; 0
 78e:	e1 f7       	brne	.-8      	; 0x788 <__LOCK_REGION_LENGTH__+0x388>
 790:	00 c0       	rjmp	.+0      	; 0x792 <__LOCK_REGION_LENGTH__+0x392>
 792:	00 00       	nop
                    _delay_ms(1000);
                    PORTB |= _BV(PB2);
 794:	2a 9a       	sbi	0x05, 2	; 5
 796:	ef ef       	ldi	r30, 0xFF	; 255
 798:	6b e7       	ldi	r22, 0x7B	; 123
 79a:	82 e9       	ldi	r24, 0x92	; 146
 79c:	e1 50       	subi	r30, 0x01	; 1
 79e:	60 40       	sbci	r22, 0x00	; 0
 7a0:	80 40       	sbci	r24, 0x00	; 0
 7a2:	e1 f7       	brne	.-8      	; 0x79c <__LOCK_REGION_LENGTH__+0x39c>
 7a4:	00 c0       	rjmp	.+0      	; 0x7a6 <__LOCK_REGION_LENGTH__+0x3a6>
 7a6:	00 00       	nop
                    _delay_ms(3000);
                    PORTB &= ~_BV(PB2);
 7a8:	2a 98       	cbi	0x05, 2	; 5
                }

                /* If button PD3 (SELECT) is pressed, the application is closed */
                if(bit_is_clear(PIND, 3))
 7aa:	4b 99       	sbic	0x09, 3	; 9
 7ac:	0b c0       	rjmp	.+22     	; 0x7c4 <__LOCK_REGION_LENGTH__+0x3c4>
                {
                    PORTB &= ~_BV(PB4);
 7ae:	2c 98       	cbi	0x05, 4	; 5
 7b0:	9f ef       	ldi	r25, 0xFF	; 255
 7b2:	e4 e3       	ldi	r30, 0x34	; 52
 7b4:	6c e0       	ldi	r22, 0x0C	; 12
 7b6:	91 50       	subi	r25, 0x01	; 1
 7b8:	e0 40       	sbci	r30, 0x00	; 0
 7ba:	60 40       	sbci	r22, 0x00	; 0
 7bc:	e1 f7       	brne	.-8      	; 0x7b6 <__LOCK_REGION_LENGTH__+0x3b6>
 7be:	00 c0       	rjmp	.+0      	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
 7c0:	00 00       	nop
                    _delay_ms(250);
                    run=2;      /* Turn off the evaluation application */
 7c2:	fe 2c       	mov	r15, r14

                }

                /* Blinking with waiting LEDs */
                PORTB &= ~_BV(PB4);
 7c4:	2c 98       	cbi	0x05, 4	; 5
                for (j = 0; j < i; j++)
 7c6:	21 15       	cp	r18, r1
 7c8:	31 05       	cpc	r19, r1
 7ca:	09 f4       	brne	.+2      	; 0x7ce <__LOCK_REGION_LENGTH__+0x3ce>
 7cc:	4f c3       	rjmp	.+1694   	; 0xe6c <__stack+0x56d>
 7ce:	80 e0       	ldi	r24, 0x00	; 0
 7d0:	90 e0       	ldi	r25, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7d2:	e5 e0       	ldi	r30, 0x05	; 5
 7d4:	ea 95       	dec	r30
 7d6:	f1 f7       	brne	.-4      	; 0x7d4 <__LOCK_REGION_LENGTH__+0x3d4>
 7d8:	00 00       	nop
 7da:	01 96       	adiw	r24, 0x01	; 1
 7dc:	82 17       	cp	r24, r18
 7de:	93 07       	cpc	r25, r19
 7e0:	c1 f7       	brne	.-16     	; 0x7d2 <__LOCK_REGION_LENGTH__+0x3d2>
                _delay_us(1);

                PORTB |= _BV(PB4);
 7e2:	2c 9a       	sbi	0x05, 4	; 5
                for (j = 0; j < (N-i); j++)
 7e4:	ba 01       	movw	r22, r20
 7e6:	41 15       	cp	r20, r1
 7e8:	51 05       	cpc	r21, r1
 7ea:	09 f4       	brne	.+2      	; 0x7ee <__LOCK_REGION_LENGTH__+0x3ee>
 7ec:	55 c3       	rjmp	.+1706   	; 0xe98 <__stack+0x599>
 7ee:	80 e0       	ldi	r24, 0x00	; 0
 7f0:	90 e0       	ldi	r25, 0x00	; 0
 7f2:	e5 e0       	ldi	r30, 0x05	; 5
 7f4:	ea 95       	dec	r30
 7f6:	f1 f7       	brne	.-4      	; 0x7f4 <__LOCK_REGION_LENGTH__+0x3f4>
 7f8:	00 00       	nop
 7fa:	01 96       	adiw	r24, 0x01	; 1
 7fc:	86 17       	cp	r24, r22
 7fe:	97 07       	cpc	r25, r23
 800:	c0 f3       	brcs	.-16     	; 0x7f2 <__LOCK_REGION_LENGTH__+0x3f2>
                run=2;          /* Turn off the evaluation application */

            }

            else
            for (i = 1; i < N; i++)
 802:	2f 5f       	subi	r18, 0xFF	; 255
 804:	3f 4f       	sbci	r19, 0xFF	; 255
 806:	41 50       	subi	r20, 0x01	; 1
 808:	51 09       	sbc	r21, r1
 80a:	09 f0       	breq	.+2      	; 0x80e <__LOCK_REGION_LENGTH__+0x40e>
 80c:	62 cf       	rjmp	.-316    	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 80e:	29 c3       	rjmp	.+1618   	; 0xe62 <__stack+0x563>
            }

            for (i = N; i > 0; i--)
			{
				/* Blinking with wrong (red) LEDs */
				if (bit_is_clear(PIND, 0))
 810:	48 99       	sbic	0x09, 0	; 9
 812:	34 c0       	rjmp	.+104    	; 0x87c <__LOCK_REGION_LENGTH__+0x47c>
				{
                    PORTB &= ~_BV(PB4);
 814:	2c 98       	cbi	0x05, 4	; 5
                    PORTB |= _BV(PB3);
 816:	2b 9a       	sbi	0x05, 3	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 818:	6f ef       	ldi	r22, 0xFF	; 255
 81a:	83 ed       	ldi	r24, 0xD3	; 211
 81c:	90 e3       	ldi	r25, 0x30	; 48
 81e:	61 50       	subi	r22, 0x01	; 1
 820:	80 40       	sbci	r24, 0x00	; 0
 822:	90 40       	sbci	r25, 0x00	; 0
 824:	e1 f7       	brne	.-8      	; 0x81e <__LOCK_REGION_LENGTH__+0x41e>
 826:	00 c0       	rjmp	.+0      	; 0x828 <__LOCK_REGION_LENGTH__+0x428>
 828:	00 00       	nop
                    _delay_ms(1000);
                    PORTB &= ~_BV(PB3);
 82a:	2b 98       	cbi	0x05, 3	; 5
 82c:	ef ef       	ldi	r30, 0xFF	; 255
 82e:	63 ed       	ldi	r22, 0xD3	; 211
 830:	80 e3       	ldi	r24, 0x30	; 48
 832:	e1 50       	subi	r30, 0x01	; 1
 834:	60 40       	sbci	r22, 0x00	; 0
 836:	80 40       	sbci	r24, 0x00	; 0
 838:	e1 f7       	brne	.-8      	; 0x832 <__LOCK_REGION_LENGTH__+0x432>
 83a:	00 c0       	rjmp	.+0      	; 0x83c <__LOCK_REGION_LENGTH__+0x43c>
 83c:	00 00       	nop
                    _delay_ms(1000);
                    PORTB |= _BV(PB3);
 83e:	2b 9a       	sbi	0x05, 3	; 5
 840:	9f ef       	ldi	r25, 0xFF	; 255
 842:	e3 ed       	ldi	r30, 0xD3	; 211
 844:	60 e3       	ldi	r22, 0x30	; 48
 846:	91 50       	subi	r25, 0x01	; 1
 848:	e0 40       	sbci	r30, 0x00	; 0
 84a:	60 40       	sbci	r22, 0x00	; 0
 84c:	e1 f7       	brne	.-8      	; 0x846 <__LOCK_REGION_LENGTH__+0x446>
 84e:	00 c0       	rjmp	.+0      	; 0x850 <__LOCK_REGION_LENGTH__+0x450>
 850:	00 00       	nop
                    _delay_ms(1000);
                    PORTB &= ~_BV(PB3);
 852:	2b 98       	cbi	0x05, 3	; 5
 854:	8f ef       	ldi	r24, 0xFF	; 255
 856:	93 ed       	ldi	r25, 0xD3	; 211
 858:	e0 e3       	ldi	r30, 0x30	; 48
 85a:	81 50       	subi	r24, 0x01	; 1
 85c:	90 40       	sbci	r25, 0x00	; 0
 85e:	e0 40       	sbci	r30, 0x00	; 0
 860:	e1 f7       	brne	.-8      	; 0x85a <__LOCK_REGION_LENGTH__+0x45a>
 862:	00 c0       	rjmp	.+0      	; 0x864 <__LOCK_REGION_LENGTH__+0x464>
 864:	00 00       	nop
                    _delay_ms(1000);
                    PORTB |= _BV(PB3);
 866:	2b 9a       	sbi	0x05, 3	; 5
 868:	6f ef       	ldi	r22, 0xFF	; 255
 86a:	8b e7       	ldi	r24, 0x7B	; 123
 86c:	92 e9       	ldi	r25, 0x92	; 146
 86e:	61 50       	subi	r22, 0x01	; 1
 870:	80 40       	sbci	r24, 0x00	; 0
 872:	90 40       	sbci	r25, 0x00	; 0
 874:	e1 f7       	brne	.-8      	; 0x86e <__LOCK_REGION_LENGTH__+0x46e>
 876:	00 c0       	rjmp	.+0      	; 0x878 <__LOCK_REGION_LENGTH__+0x478>
 878:	00 00       	nop
                    _delay_ms(3000);
                    PORTB &= ~_BV(PB3);
 87a:	2b 98       	cbi	0x05, 3	; 5
                }
                /* Blinking with right (green) LEDs */
                if (bit_is_clear(PIND, 1))
 87c:	49 99       	sbic	0x09, 1	; 9
 87e:	34 c0       	rjmp	.+104    	; 0x8e8 <__LOCK_REGION_LENGTH__+0x4e8>
                {
                    PORTB &= ~_BV(PB4);
 880:	2c 98       	cbi	0x05, 4	; 5
                    PORTB |= _BV(PB2);
 882:	2a 9a       	sbi	0x05, 2	; 5
 884:	ef ef       	ldi	r30, 0xFF	; 255
 886:	63 ed       	ldi	r22, 0xD3	; 211
 888:	80 e3       	ldi	r24, 0x30	; 48
 88a:	e1 50       	subi	r30, 0x01	; 1
 88c:	60 40       	sbci	r22, 0x00	; 0
 88e:	80 40       	sbci	r24, 0x00	; 0
 890:	e1 f7       	brne	.-8      	; 0x88a <__LOCK_REGION_LENGTH__+0x48a>
 892:	00 c0       	rjmp	.+0      	; 0x894 <__LOCK_REGION_LENGTH__+0x494>
 894:	00 00       	nop
                    _delay_ms(1000);
                    PORTB &= ~_BV(PB2);
 896:	2a 98       	cbi	0x05, 2	; 5
 898:	9f ef       	ldi	r25, 0xFF	; 255
 89a:	e3 ed       	ldi	r30, 0xD3	; 211
 89c:	60 e3       	ldi	r22, 0x30	; 48
 89e:	91 50       	subi	r25, 0x01	; 1
 8a0:	e0 40       	sbci	r30, 0x00	; 0
 8a2:	60 40       	sbci	r22, 0x00	; 0
 8a4:	e1 f7       	brne	.-8      	; 0x89e <__LOCK_REGION_LENGTH__+0x49e>
 8a6:	00 c0       	rjmp	.+0      	; 0x8a8 <__LOCK_REGION_LENGTH__+0x4a8>
 8a8:	00 00       	nop
                    _delay_ms(1000);
                    PORTB |= _BV(PB2);
 8aa:	2a 9a       	sbi	0x05, 2	; 5
 8ac:	8f ef       	ldi	r24, 0xFF	; 255
 8ae:	93 ed       	ldi	r25, 0xD3	; 211
 8b0:	e0 e3       	ldi	r30, 0x30	; 48
 8b2:	81 50       	subi	r24, 0x01	; 1
 8b4:	90 40       	sbci	r25, 0x00	; 0
 8b6:	e0 40       	sbci	r30, 0x00	; 0
 8b8:	e1 f7       	brne	.-8      	; 0x8b2 <__LOCK_REGION_LENGTH__+0x4b2>
 8ba:	00 c0       	rjmp	.+0      	; 0x8bc <__LOCK_REGION_LENGTH__+0x4bc>
 8bc:	00 00       	nop
                    _delay_ms(1000);
                    PORTB &= ~_BV(PB2);
 8be:	2a 98       	cbi	0x05, 2	; 5
 8c0:	6f ef       	ldi	r22, 0xFF	; 255
 8c2:	83 ed       	ldi	r24, 0xD3	; 211
 8c4:	90 e3       	ldi	r25, 0x30	; 48
 8c6:	61 50       	subi	r22, 0x01	; 1
 8c8:	80 40       	sbci	r24, 0x00	; 0
 8ca:	90 40       	sbci	r25, 0x00	; 0
 8cc:	e1 f7       	brne	.-8      	; 0x8c6 <__LOCK_REGION_LENGTH__+0x4c6>
 8ce:	00 c0       	rjmp	.+0      	; 0x8d0 <__LOCK_REGION_LENGTH__+0x4d0>
 8d0:	00 00       	nop
                    _delay_ms(1000);
                    PORTB |= _BV(PB2);
 8d2:	2a 9a       	sbi	0x05, 2	; 5
 8d4:	ef ef       	ldi	r30, 0xFF	; 255
 8d6:	6b e7       	ldi	r22, 0x7B	; 123
 8d8:	82 e9       	ldi	r24, 0x92	; 146
 8da:	e1 50       	subi	r30, 0x01	; 1
 8dc:	60 40       	sbci	r22, 0x00	; 0
 8de:	80 40       	sbci	r24, 0x00	; 0
 8e0:	e1 f7       	brne	.-8      	; 0x8da <__LOCK_REGION_LENGTH__+0x4da>
 8e2:	00 c0       	rjmp	.+0      	; 0x8e4 <__LOCK_REGION_LENGTH__+0x4e4>
 8e4:	00 00       	nop
                    _delay_ms(3000);
                    PORTB &= ~_BV(PB2);
 8e6:	2a 98       	cbi	0x05, 2	; 5
                }

                /* If button PD3 (SELECT) is pressed, the application is closed */
                if(bit_is_clear(PIND, 3))
 8e8:	4b 99       	sbic	0x09, 3	; 9
 8ea:	0b c0       	rjmp	.+22     	; 0x902 <__stack+0x3>
                {
                    PORTB &= ~_BV(PB4);
 8ec:	2c 98       	cbi	0x05, 4	; 5
 8ee:	9f ef       	ldi	r25, 0xFF	; 255
 8f0:	e4 e3       	ldi	r30, 0x34	; 52
 8f2:	6c e0       	ldi	r22, 0x0C	; 12
 8f4:	91 50       	subi	r25, 0x01	; 1
 8f6:	e0 40       	sbci	r30, 0x00	; 0
 8f8:	60 40       	sbci	r22, 0x00	; 0
 8fa:	e1 f7       	brne	.-8      	; 0x8f4 <__LOCK_REGION_LENGTH__+0x4f4>
 8fc:	00 c0       	rjmp	.+0      	; 0x8fe <__LOCK_REGION_LENGTH__+0x4fe>
 8fe:	00 00       	nop
                    _delay_ms(250);
                    run=2;
 900:	fe 2c       	mov	r15, r14
                }
                /* Decreasing blinking with waiting (yellow) LEDs */
                PORTB &= ~_BV(PB4);         /* Turn the waiting (yellow) LEDs off */
 902:	2c 98       	cbi	0x05, 4	; 5
                for (j = 0; j < i; j++)
 904:	21 15       	cp	r18, r1
 906:	31 05       	cpc	r19, r1
 908:	09 f4       	brne	.+2      	; 0x90c <__stack+0xd>
 90a:	b3 c2       	rjmp	.+1382   	; 0xe72 <__stack+0x573>
 90c:	80 e0       	ldi	r24, 0x00	; 0
 90e:	90 e0       	ldi	r25, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 910:	e5 e0       	ldi	r30, 0x05	; 5
 912:	ea 95       	dec	r30
 914:	f1 f7       	brne	.-4      	; 0x912 <__stack+0x13>
 916:	00 00       	nop
 918:	01 96       	adiw	r24, 0x01	; 1
 91a:	82 17       	cp	r24, r18
 91c:	93 07       	cpc	r25, r19
 91e:	c1 f7       	brne	.-16     	; 0x910 <__stack+0x11>
                _delay_us(1);

                PORTB |= _BV(PB4);          /* Turn the waiting (yellow) LEDs off */
 920:	2c 9a       	sbi	0x05, 4	; 5
                for (j = 0; j < (N-i); j++)
 922:	ba 01       	movw	r22, r20
 924:	41 15       	cp	r20, r1
 926:	51 05       	cpc	r21, r1
 928:	51 f0       	breq	.+20     	; 0x93e <__stack+0x3f>
                    _delay_ms(250);
                    run=2;
                }
                /* Decreasing blinking with waiting (yellow) LEDs */
                PORTB &= ~_BV(PB4);         /* Turn the waiting (yellow) LEDs off */
                for (j = 0; j < i; j++)
 92a:	80 e0       	ldi	r24, 0x00	; 0
 92c:	90 e0       	ldi	r25, 0x00	; 0
 92e:	e5 e0       	ldi	r30, 0x05	; 5
 930:	ea 95       	dec	r30
 932:	f1 f7       	brne	.-4      	; 0x930 <__stack+0x31>
 934:	00 00       	nop
                _delay_us(1);

                PORTB |= _BV(PB4);          /* Turn the waiting (yellow) LEDs off */
                for (j = 0; j < (N-i); j++)
 936:	01 96       	adiw	r24, 0x01	; 1
 938:	86 17       	cp	r24, r22
 93a:	97 07       	cpc	r25, r23
 93c:	c0 f3       	brcs	.-16     	; 0x92e <__stack+0x2f>
 93e:	21 50       	subi	r18, 0x01	; 1
 940:	31 09       	sbc	r19, r1
 942:	4f 5f       	subi	r20, 0xFF	; 255
 944:	5f 4f       	sbci	r21, 0xFF	; 255
                _delay_us(1);


            }

            for (i = N; i > 0; i--)
 946:	21 15       	cp	r18, r1
 948:	31 05       	cpc	r19, r1
 94a:	09 f0       	breq	.+2      	; 0x94e <__stack+0x4f>
 94c:	61 cf       	rjmp	.-318    	; 0x810 <__LOCK_REGION_LENGTH__+0x410>
                _delay_us(1);
            }
        }  /* End of if (run == 1) */

        /* Turn the waiting (yellow) LEDs off */
        if(run==2)
 94e:	22 e0       	ldi	r18, 0x02	; 2
 950:	f2 12       	cpse	r15, r18
 952:	01 c0       	rjmp	.+2      	; 0x956 <__stack+0x57>
        {
            PORTB &= ~_BV(PB4);
 954:	2c 98       	cbi	0x05, 4	; 5
        }

        /* If the condition is met, the countdown application starts */
        if(time==1)
 956:	61 e0       	ldi	r22, 0x01	; 1
 958:	96 12       	cpse	r9, r22
 95a:	1b c1       	rjmp	.+566    	; 0xb92 <__stack+0x293>
        {
			condition=0;
			lcd_gotoxy(10,1);
 95c:	61 2f       	mov	r22, r17
 95e:	8a e0       	ldi	r24, 0x0A	; 10
 960:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>

            /* Use button PD0 to set the value of minutes*/
            if(bit_is_clear(PIND, 0))
 964:	48 99       	sbic	0x09, 0	; 9
 966:	1b c0       	rjmp	.+54     	; 0x99e <__stack+0x9f>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 968:	8f ef       	ldi	r24, 0xFF	; 255
 96a:	94 e3       	ldi	r25, 0x34	; 52
 96c:	ec e0       	ldi	r30, 0x0C	; 12
 96e:	81 50       	subi	r24, 0x01	; 1
 970:	90 40       	sbci	r25, 0x00	; 0
 972:	e0 40       	sbci	r30, 0x00	; 0
 974:	e1 f7       	brne	.-8      	; 0x96e <__stack+0x6f>
 976:	00 c0       	rjmp	.+0      	; 0x978 <__stack+0x79>
 978:	00 00       	nop
            {
				_delay_ms(250);
                minutes++;
 97a:	b3 94       	inc	r11
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 97c:	4a e0       	ldi	r20, 0x0A	; 10
 97e:	be 01       	movw	r22, r28
 980:	6f 5f       	subi	r22, 0xFF	; 255
 982:	7f 4f       	sbci	r23, 0xFF	; 255
 984:	8b 2d       	mov	r24, r11
 986:	90 e0       	ldi	r25, 0x00	; 0
 988:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__itoa_ncheck>
                /* Convert int data type to string data type. Function defined in stdlib.h */
                itoa(minutes, lcd_string, 10);      /* Here 10 means Decimal */
                lcd_puts(lcd_string);
 98c:	ce 01       	movw	r24, r28
 98e:	01 96       	adiw	r24, 0x01	; 1
 990:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>

                if(minutes==60)
 994:	2c e3       	ldi	r18, 0x3C	; 60
 996:	b2 12       	cpse	r11, r18
 998:	02 c0       	rjmp	.+4      	; 0x99e <__stack+0x9f>
                {
                    minutes=-1;
 99a:	bb 24       	eor	r11, r11
 99c:	ba 94       	dec	r11
                }
            }
            /* Use button PD1 to set the value of seconds */
            if(bit_is_clear(PIND, 1))
 99e:	49 99       	sbic	0x09, 1	; 9
 9a0:	26 c0       	rjmp	.+76     	; 0x9ee <__stack+0xef>
 9a2:	6f ef       	ldi	r22, 0xFF	; 255
 9a4:	84 e3       	ldi	r24, 0x34	; 52
 9a6:	9c e0       	ldi	r25, 0x0C	; 12
 9a8:	61 50       	subi	r22, 0x01	; 1
 9aa:	80 40       	sbci	r24, 0x00	; 0
 9ac:	90 40       	sbci	r25, 0x00	; 0
 9ae:	e1 f7       	brne	.-8      	; 0x9a8 <__stack+0xa9>
 9b0:	00 c0       	rjmp	.+0      	; 0x9b2 <__stack+0xb3>
 9b2:	00 00       	nop
            {
				_delay_ms(250);
                lcd_gotoxy(12,1);
 9b4:	61 2f       	mov	r22, r17
 9b6:	8c e0       	ldi	r24, 0x0C	; 12
 9b8:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                lcd_puts(":");
 9bc:	8b e4       	ldi	r24, 0x4B	; 75
 9be:	91 e0       	ldi	r25, 0x01	; 1
 9c0:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                lcd_gotoxy(13,1);
 9c4:	61 2f       	mov	r22, r17
 9c6:	8d e0       	ldi	r24, 0x0D	; 13
 9c8:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
                seconds++;
 9cc:	83 94       	inc	r8
 9ce:	4a e0       	ldi	r20, 0x0A	; 10
 9d0:	be 01       	movw	r22, r28
 9d2:	6f 5f       	subi	r22, 0xFF	; 255
 9d4:	7f 4f       	sbci	r23, 0xFF	; 255
 9d6:	88 2d       	mov	r24, r8
 9d8:	90 e0       	ldi	r25, 0x00	; 0
 9da:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__itoa_ncheck>
                itoa(seconds, lcd_string, 10);
                lcd_puts(lcd_string);
 9de:	ce 01       	movw	r24, r28
 9e0:	01 96       	adiw	r24, 0x01	; 1
 9e2:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>

                /* Overrun control */
                if(seconds==60)
 9e6:	ec e3       	ldi	r30, 0x3C	; 60
 9e8:	8e 16       	cp	r8, r30
 9ea:	09 f4       	brne	.+2      	; 0x9ee <__stack+0xef>
 9ec:	45 c2       	rjmp	.+1162   	; 0xe78 <__stack+0x579>
                {
                    seconds=-1;
                }
            }
            /* Use button PD5 to start countdown*/
            if(bit_is_clear(PINB, 5))
 9ee:	1d 99       	sbic	0x03, 5	; 3
 9f0:	4e c2       	rjmp	.+1180   	; 0xe8e <__stack+0x58f>
            {
				if(seconds==0 && minutes==0)
 9f2:	81 10       	cpse	r8, r1
 9f4:	1b c0       	rjmp	.+54     	; 0xa2c <__stack+0x12d>
 9f6:	b1 10       	cpse	r11, r1
 9f8:	22 c0       	rjmp	.+68     	; 0xa3e <__stack+0x13f>
 9fa:	4a e0       	ldi	r20, 0x0A	; 10
 9fc:	be 01       	movw	r22, r28
 9fe:	6f 5f       	subi	r22, 0xFF	; 255
 a00:	7f 4f       	sbci	r23, 0xFF	; 255
 a02:	80 e0       	ldi	r24, 0x00	; 0
 a04:	90 e0       	ldi	r25, 0x00	; 0
 a06:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__itoa_ncheck>
				{
					seconds=0;
					itoa(seconds, lcd_string, 10);
					lcd_puts(lcd_string);
 a0a:	ce 01       	movw	r24, r28
 a0c:	01 96       	adiw	r24, 0x01	; 1
 a0e:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
 a12:	4a e0       	ldi	r20, 0x0A	; 10
 a14:	be 01       	movw	r22, r28
 a16:	6f 5f       	subi	r22, 0xFF	; 255
 a18:	7f 4f       	sbci	r23, 0xFF	; 255
 a1a:	80 e0       	ldi	r24, 0x00	; 0
 a1c:	90 e0       	ldi	r25, 0x00	; 0
 a1e:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__itoa_ncheck>
					minutes=0;
					itoa(minutes, lcd_string, 10);
					lcd_puts(lcd_string);
 a22:	ce 01       	movw	r24, r28
 a24:	01 96       	adiw	r24, 0x01	; 1
 a26:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
 a2a:	09 c0       	rjmp	.+18     	; 0xa3e <__stack+0x13f>

				}

                for(seconds=seconds;seconds<=59;seconds--)
 a2c:	2b e3       	ldi	r18, 0x3B	; 59
 a2e:	28 15       	cp	r18, r8
 a30:	08 f4       	brcc	.+2      	; 0xa34 <__stack+0x135>
 a32:	28 c2       	rjmp	.+1104   	; 0xe84 <__stack+0x585>
 a34:	04 c0       	rjmp	.+8      	; 0xa3e <__stack+0x13f>
 a36:	0f 2e       	mov	r0, r31
 a38:	fa e3       	ldi	r31, 0x3A	; 58
 a3a:	8f 2e       	mov	r8, r31
 a3c:	f0 2d       	mov	r31, r0
 a3e:	6f ef       	ldi	r22, 0xFF	; 255
 a40:	83 ed       	ldi	r24, 0xD3	; 211
 a42:	90 e3       	ldi	r25, 0x30	; 48
 a44:	61 50       	subi	r22, 0x01	; 1
 a46:	80 40       	sbci	r24, 0x00	; 0
 a48:	90 40       	sbci	r25, 0x00	; 0
 a4a:	e1 f7       	brne	.-8      	; 0xa44 <__stack+0x145>
 a4c:	00 c0       	rjmp	.+0      	; 0xa4e <__stack+0x14f>
 a4e:	00 00       	nop
                {
				    _delay_ms(1000);
					lcd_gotoxy(13,1);
 a50:	61 2f       	mov	r22, r17
 a52:	8d e0       	ldi	r24, 0x0D	; 13
 a54:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
 a58:	4a e0       	ldi	r20, 0x0A	; 10
 a5a:	be 01       	movw	r22, r28
 a5c:	6f 5f       	subi	r22, 0xFF	; 255
 a5e:	7f 4f       	sbci	r23, 0xFF	; 255
 a60:	88 2d       	mov	r24, r8
 a62:	90 e0       	ldi	r25, 0x00	; 0
 a64:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__itoa_ncheck>
					itoa(seconds, lcd_string, 10);
					lcd_puts(lcd_string);
 a68:	ce 01       	movw	r24, r28
 a6a:	01 96       	adiw	r24, 0x01	; 1
 a6c:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>

					if(seconds==0)
 a70:	81 10       	cpse	r8, r1
 a72:	88 c0       	rjmp	.+272    	; 0xb84 <__stack+0x285>
					{
						lcd_gotoxy(10,1);
 a74:	61 2f       	mov	r22, r17
 a76:	8a e0       	ldi	r24, 0x0A	; 10
 a78:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						minutes--;
 a7c:	ba 94       	dec	r11
 a7e:	4a e0       	ldi	r20, 0x0A	; 10
 a80:	be 01       	movw	r22, r28
 a82:	6f 5f       	subi	r22, 0xFF	; 255
 a84:	7f 4f       	sbci	r23, 0xFF	; 255
 a86:	8b 2d       	mov	r24, r11
 a88:	90 e0       	ldi	r25, 0x00	; 0
 a8a:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__itoa_ncheck>
						itoa(minutes, lcd_string, 10);
						lcd_puts(lcd_string);
 a8e:	ce 01       	movw	r24, r28
 a90:	01 96       	adiw	r24, 0x01	; 1
 a92:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						lcd_gotoxy(13,1);
 a96:	61 2f       	mov	r22, r17
 a98:	8d e0       	ldi	r24, 0x0D	; 13
 a9a:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
 a9e:	4a e0       	ldi	r20, 0x0A	; 10
 aa0:	be 01       	movw	r22, r28
 aa2:	6f 5f       	subi	r22, 0xFF	; 255
 aa4:	7f 4f       	sbci	r23, 0xFF	; 255
 aa6:	8b e3       	ldi	r24, 0x3B	; 59
 aa8:	90 e0       	ldi	r25, 0x00	; 0
 aaa:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__itoa_ncheck>
						seconds=59;
						itoa(seconds, lcd_string, 10);
						lcd_puts(lcd_string);
 aae:	ce 01       	movw	r24, r28
 ab0:	01 96       	adiw	r24, 0x01	; 1
 ab2:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						if(minutes==0)
 ab6:	b1 10       	cpse	r11, r1
 ab8:	be cf       	rjmp	.-132    	; 0xa36 <__stack+0x137>
 aba:	4a e0       	ldi	r20, 0x0A	; 10
 abc:	be 01       	movw	r22, r28
 abe:	6f 5f       	subi	r22, 0xFF	; 255
 ac0:	7f 4f       	sbci	r23, 0xFF	; 255
 ac2:	80 e0       	ldi	r24, 0x00	; 0
 ac4:	90 e0       	ldi	r25, 0x00	; 0
 ac6:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__itoa_ncheck>
						{
							minutes=0;
							itoa(minutes, lcd_string, 10);
							lcd_puts(lcd_string);
 aca:	ce 01       	movw	r24, r28
 acc:	01 96       	adiw	r24, 0x01	; 1
 ace:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
 ad2:	ef ef       	ldi	r30, 0xFF	; 255
 ad4:	23 ed       	ldi	r18, 0xD3	; 211
 ad6:	60 e3       	ldi	r22, 0x30	; 48
 ad8:	e1 50       	subi	r30, 0x01	; 1
 ada:	20 40       	sbci	r18, 0x00	; 0
 adc:	60 40       	sbci	r22, 0x00	; 0
 ade:	e1 f7       	brne	.-8      	; 0xad8 <__stack+0x1d9>
 ae0:	00 c0       	rjmp	.+0      	; 0xae2 <__stack+0x1e3>
 ae2:	00 00       	nop
							for(seconds=59;seconds>0; seconds--)
							{
								_delay_ms(1000);
								lcd_gotoxy(13,1);
 ae4:	61 2f       	mov	r22, r17
 ae6:	8d e0       	ldi	r24, 0x0D	; 13
 ae8:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
 aec:	4a e0       	ldi	r20, 0x0A	; 10
 aee:	be 01       	movw	r22, r28
 af0:	6f 5f       	subi	r22, 0xFF	; 255
 af2:	7f 4f       	sbci	r23, 0xFF	; 255
 af4:	8b e3       	ldi	r24, 0x3B	; 59
 af6:	90 e0       	ldi	r25, 0x00	; 0
 af8:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__itoa_ncheck>
								itoa(seconds, lcd_string, 10);
								lcd_puts(lcd_string);
 afc:	ce 01       	movw	r24, r28
 afe:	01 96       	adiw	r24, 0x01	; 1
 b00:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
 b04:	0f 2e       	mov	r0, r31
 b06:	fa e3       	ldi	r31, 0x3A	; 58
 b08:	8f 2e       	mov	r8, r31
 b0a:	91 2c       	mov	r9, r1
 b0c:	f0 2d       	mov	r31, r0
 b0e:	1d c0       	rjmp	.+58     	; 0xb4a <__stack+0x24b>
 b10:	4a e0       	ldi	r20, 0x0A	; 10
 b12:	be 01       	movw	r22, r28
 b14:	6f 5f       	subi	r22, 0xFF	; 255
 b16:	7f 4f       	sbci	r23, 0xFF	; 255
 b18:	80 e0       	ldi	r24, 0x00	; 0
 b1a:	90 e0       	ldi	r25, 0x00	; 0
 b1c:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__itoa_ncheck>
								if(seconds==1)
								{
									seconds=0;
									itoa(seconds, lcd_string, 10);
									lcd_puts(lcd_string);
 b20:	ce 01       	movw	r24, r28
 b22:	01 96       	adiw	r24, 0x01	; 1
 b24:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
									lcd_clrscr();
 b28:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
									lcd_puts("Nastaveni casu:");
 b2c:	88 e6       	ldi	r24, 0x68	; 104
 b2e:	91 e0       	ldi	r25, 0x01	; 1
 b30:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
									lcd_gotoxy(10,1);
 b34:	61 2f       	mov	r22, r17
 b36:	8a e0       	ldi	r24, 0x0A	; 10
 b38:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
									lcd_puts("00:00");
 b3c:	8e e8       	ldi	r24, 0x8E	; 142
 b3e:	91 e0       	ldi	r25, 0x01	; 1
 b40:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
					itoa(minutes, lcd_string, 10);
					lcd_puts(lcd_string);

				}

                for(seconds=seconds;seconds<=59;seconds--)
 b44:	88 24       	eor	r8, r8
 b46:	8a 94       	dec	r8
 b48:	22 c0       	rjmp	.+68     	; 0xb8e <__stack+0x28f>
 b4a:	8f ef       	ldi	r24, 0xFF	; 255
 b4c:	93 ed       	ldi	r25, 0xD3	; 211
 b4e:	e0 e3       	ldi	r30, 0x30	; 48
 b50:	81 50       	subi	r24, 0x01	; 1
 b52:	90 40       	sbci	r25, 0x00	; 0
 b54:	e0 40       	sbci	r30, 0x00	; 0
 b56:	e1 f7       	brne	.-8      	; 0xb50 <__stack+0x251>
 b58:	00 c0       	rjmp	.+0      	; 0xb5a <__stack+0x25b>
 b5a:	00 00       	nop
							itoa(minutes, lcd_string, 10);
							lcd_puts(lcd_string);
							for(seconds=59;seconds>0; seconds--)
							{
								_delay_ms(1000);
								lcd_gotoxy(13,1);
 b5c:	61 2f       	mov	r22, r17
 b5e:	8d e0       	ldi	r24, 0x0D	; 13
 b60:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
 b64:	4a e0       	ldi	r20, 0x0A	; 10
 b66:	be 01       	movw	r22, r28
 b68:	6f 5f       	subi	r22, 0xFF	; 255
 b6a:	7f 4f       	sbci	r23, 0xFF	; 255
 b6c:	c4 01       	movw	r24, r8
 b6e:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__itoa_ncheck>
								itoa(seconds, lcd_string, 10);
								lcd_puts(lcd_string);
 b72:	ce 01       	movw	r24, r28
 b74:	01 96       	adiw	r24, 0x01	; 1
 b76:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
 b7a:	21 e0       	ldi	r18, 0x01	; 1
 b7c:	82 1a       	sub	r8, r18
 b7e:	91 08       	sbc	r9, r1
								if(seconds==1)
 b80:	21 f7       	brne	.-56     	; 0xb4a <__stack+0x24b>
 b82:	c6 cf       	rjmp	.-116    	; 0xb10 <__stack+0x211>
					itoa(minutes, lcd_string, 10);
					lcd_puts(lcd_string);

				}

                for(seconds=seconds;seconds<=59;seconds--)
 b84:	8a 94       	dec	r8
 b86:	6b e3       	ldi	r22, 0x3B	; 59
 b88:	68 15       	cp	r22, r8
 b8a:	08 f0       	brcs	.+2      	; 0xb8e <__stack+0x28f>
 b8c:	58 cf       	rjmp	.-336    	; 0xa3e <__stack+0x13f>
								}
							}
						}
					}
				}
				time = 0; /* After the countdown is finished, the application is turned off */
 b8e:	91 2c       	mov	r9, r1
 b90:	7e c1       	rjmp	.+764    	; 0xe8e <__stack+0x58f>
            }
		}  /* End of if (time == 1) */

        /* If the condition is met, the components list is open */
		if(menu1==1)
 b92:	81 e0       	ldi	r24, 0x01	; 1
 b94:	c8 12       	cpse	r12, r24
 b96:	dc c0       	rjmp	.+440    	; 0xd50 <__stack+0x451>
		{
		    /* Use button PD0 to start browse through list of components */
			if(bit_is_clear(PIND, 0))
 b98:	48 99       	sbic	0x09, 0	; 9
 b9a:	da c0       	rjmp	.+436    	; 0xd50 <__stack+0x451>
 b9c:	01 c0       	rjmp	.+2      	; 0xba0 <__stack+0x2a1>
 b9e:	d1 2c       	mov	r13, r1
			{
				info=info+1;
 ba0:	73 94       	inc	r7
				/* Overrun control */
				if (info==8)
 ba2:	98 e0       	ldi	r25, 0x08	; 8
 ba4:	79 16       	cp	r7, r25
 ba6:	61 f0       	breq	.+24     	; 0xbc0 <__stack+0x2c1>
				{
					info = 1;
				}

				switch (info) {
 ba8:	87 2d       	mov	r24, r7
 baa:	90 e0       	ldi	r25, 0x00	; 0
 bac:	fc 01       	movw	r30, r24
 bae:	31 97       	sbiw	r30, 0x01	; 1
 bb0:	e7 30       	cpi	r30, 0x07	; 7
 bb2:	f1 05       	cpc	r31, r1
 bb4:	08 f0       	brcs	.+2      	; 0xbb8 <__stack+0x2b9>
 bb6:	ca c0       	rjmp	.+404    	; 0xd4c <__stack+0x44d>
 bb8:	ec 5c       	subi	r30, 0xCC	; 204
 bba:	ff 4f       	sbci	r31, 0xFF	; 255
 bbc:	0c 94 55 07 	jmp	0xeaa	; 0xeaa <__tablejump2__>
 bc0:	ef ef       	ldi	r30, 0xFF	; 255
 bc2:	24 e3       	ldi	r18, 0x34	; 52
 bc4:	6c e0       	ldi	r22, 0x0C	; 12
 bc6:	e1 50       	subi	r30, 0x01	; 1
 bc8:	20 40       	sbci	r18, 0x00	; 0
 bca:	60 40       	sbci	r22, 0x00	; 0
 bcc:	e1 f7       	brne	.-8      	; 0xbc6 <__stack+0x2c7>
 bce:	00 c0       	rjmp	.+0      	; 0xbd0 <__stack+0x2d1>
 bd0:	00 00       	nop
					case 1:
						_delay_ms(250);
						lcd_clrscr();
 bd2:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
						lcd_gotoxy(0,0);
 bd6:	60 e0       	ldi	r22, 0x00	; 0
 bd8:	80 e0       	ldi	r24, 0x00	; 0
 bda:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("1x Arduino UNO");
 bde:	84 e9       	ldi	r24, 0x94	; 148
 be0:	91 e0       	ldi	r25, 0x01	; 1
 be2:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						lcd_gotoxy(0,1);
 be6:	61 2f       	mov	r22, r17
 be8:	80 e0       	ldi	r24, 0x00	; 0
 bea:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("1x LCD displej");
 bee:	83 ea       	ldi	r24, 0xA3	; 163
 bf0:	91 e0       	ldi	r25, 0x01	; 1
 bf2:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                        break;
 bf6:	77 24       	eor	r7, r7
 bf8:	73 94       	inc	r7
 bfa:	aa c0       	rjmp	.+340    	; 0xd50 <__stack+0x451>
 bfc:	8f ef       	ldi	r24, 0xFF	; 255
 bfe:	94 e3       	ldi	r25, 0x34	; 52
 c00:	ec e0       	ldi	r30, 0x0C	; 12
 c02:	81 50       	subi	r24, 0x01	; 1
 c04:	90 40       	sbci	r25, 0x00	; 0
 c06:	e0 40       	sbci	r30, 0x00	; 0
 c08:	e1 f7       	brne	.-8      	; 0xc02 <__stack+0x303>
 c0a:	00 c0       	rjmp	.+0      	; 0xc0c <__stack+0x30d>
 c0c:	00 00       	nop

					case 2:
						_delay_ms(250);
						lcd_clrscr();
 c0e:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
						lcd_gotoxy(0,0);
 c12:	60 e0       	ldi	r22, 0x00	; 0
 c14:	80 e0       	ldi	r24, 0x00	; 0
 c16:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("1x LCD displej");
 c1a:	83 ea       	ldi	r24, 0xA3	; 163
 c1c:	91 e0       	ldi	r25, 0x01	; 1
 c1e:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						lcd_gotoxy(0,1);
 c22:	61 2f       	mov	r22, r17
 c24:	80 e0       	ldi	r24, 0x00	; 0
 c26:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("2x NKP");
 c2a:	82 eb       	ldi	r24, 0xB2	; 178
 c2c:	91 e0       	ldi	r25, 0x01	; 1
 c2e:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                        break;
 c32:	8e c0       	rjmp	.+284    	; 0xd50 <__stack+0x451>
 c34:	2f ef       	ldi	r18, 0xFF	; 255
 c36:	64 e3       	ldi	r22, 0x34	; 52
 c38:	8c e0       	ldi	r24, 0x0C	; 12
 c3a:	21 50       	subi	r18, 0x01	; 1
 c3c:	60 40       	sbci	r22, 0x00	; 0
 c3e:	80 40       	sbci	r24, 0x00	; 0
 c40:	e1 f7       	brne	.-8      	; 0xc3a <__stack+0x33b>
 c42:	00 c0       	rjmp	.+0      	; 0xc44 <__stack+0x345>
 c44:	00 00       	nop

					case 3:
						_delay_ms(250);
						lcd_clrscr();
 c46:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
						lcd_gotoxy(0,0);
 c4a:	60 e0       	ldi	r22, 0x00	; 0
 c4c:	80 e0       	ldi	r24, 0x00	; 0
 c4e:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("2x NKP");
 c52:	82 eb       	ldi	r24, 0xB2	; 178
 c54:	91 e0       	ldi	r25, 0x01	; 1
 c56:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						lcd_gotoxy(0,1);
 c5a:	61 2f       	mov	r22, r17
 c5c:	80 e0       	ldi	r24, 0x00	; 0
 c5e:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("1x poten. 10K");
 c62:	89 eb       	ldi	r24, 0xB9	; 185
 c64:	91 e0       	ldi	r25, 0x01	; 1
 c66:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                        break;
 c6a:	72 c0       	rjmp	.+228    	; 0xd50 <__stack+0x451>
 c6c:	9f ef       	ldi	r25, 0xFF	; 255
 c6e:	e4 e3       	ldi	r30, 0x34	; 52
 c70:	2c e0       	ldi	r18, 0x0C	; 12
 c72:	91 50       	subi	r25, 0x01	; 1
 c74:	e0 40       	sbci	r30, 0x00	; 0
 c76:	20 40       	sbci	r18, 0x00	; 0
 c78:	e1 f7       	brne	.-8      	; 0xc72 <__stack+0x373>
 c7a:	00 c0       	rjmp	.+0      	; 0xc7c <__stack+0x37d>
 c7c:	00 00       	nop

					case 4:
						_delay_ms(250);
						lcd_clrscr();
 c7e:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
						lcd_gotoxy(0,0);
 c82:	60 e0       	ldi	r22, 0x00	; 0
 c84:	80 e0       	ldi	r24, 0x00	; 0
 c86:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("1x poten. 10K");
 c8a:	89 eb       	ldi	r24, 0xB9	; 185
 c8c:	91 e0       	ldi	r25, 0x01	; 1
 c8e:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						lcd_gotoxy(0,1);
 c92:	61 2f       	mov	r22, r17
 c94:	80 e0       	ldi	r24, 0x00	; 0
 c96:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("5x tlacitko");
 c9a:	87 ec       	ldi	r24, 0xC7	; 199
 c9c:	91 e0       	ldi	r25, 0x01	; 1
 c9e:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                        break;
 ca2:	56 c0       	rjmp	.+172    	; 0xd50 <__stack+0x451>
 ca4:	6f ef       	ldi	r22, 0xFF	; 255
 ca6:	84 e3       	ldi	r24, 0x34	; 52
 ca8:	9c e0       	ldi	r25, 0x0C	; 12
 caa:	61 50       	subi	r22, 0x01	; 1
 cac:	80 40       	sbci	r24, 0x00	; 0
 cae:	90 40       	sbci	r25, 0x00	; 0
 cb0:	e1 f7       	brne	.-8      	; 0xcaa <__stack+0x3ab>
 cb2:	00 c0       	rjmp	.+0      	; 0xcb4 <__stack+0x3b5>
 cb4:	00 00       	nop

					case 5:
						_delay_ms(250);
						lcd_clrscr();
 cb6:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
						lcd_gotoxy(0,0);
 cba:	60 e0       	ldi	r22, 0x00	; 0
 cbc:	80 e0       	ldi	r24, 0x00	; 0
 cbe:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("5x tlacitko");
 cc2:	87 ec       	ldi	r24, 0xC7	; 199
 cc4:	91 e0       	ldi	r25, 0x01	; 1
 cc6:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						lcd_gotoxy(0,1);
 cca:	61 2f       	mov	r22, r17
 ccc:	80 e0       	ldi	r24, 0x00	; 0
 cce:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("18x LED");
 cd2:	83 ed       	ldi	r24, 0xD3	; 211
 cd4:	91 e0       	ldi	r25, 0x01	; 1
 cd6:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                        break;
 cda:	3a c0       	rjmp	.+116    	; 0xd50 <__stack+0x451>
 cdc:	ef ef       	ldi	r30, 0xFF	; 255
 cde:	24 e3       	ldi	r18, 0x34	; 52
 ce0:	6c e0       	ldi	r22, 0x0C	; 12
 ce2:	e1 50       	subi	r30, 0x01	; 1
 ce4:	20 40       	sbci	r18, 0x00	; 0
 ce6:	60 40       	sbci	r22, 0x00	; 0
 ce8:	e1 f7       	brne	.-8      	; 0xce2 <__stack+0x3e3>
 cea:	00 c0       	rjmp	.+0      	; 0xcec <__stack+0x3ed>
 cec:	00 00       	nop

					case 6:
						_delay_ms(250);
						lcd_clrscr();
 cee:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
						lcd_gotoxy(0,0);
 cf2:	60 e0       	ldi	r22, 0x00	; 0
 cf4:	80 e0       	ldi	r24, 0x00	; 0
 cf6:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("18x LED");
 cfa:	83 ed       	ldi	r24, 0xD3	; 211
 cfc:	91 e0       	ldi	r25, 0x01	; 1
 cfe:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						lcd_gotoxy(0,1);
 d02:	61 2f       	mov	r22, r17
 d04:	80 e0       	ldi	r24, 0x00	; 0
 d06:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("9x rezistor 1K");
 d0a:	8b ed       	ldi	r24, 0xDB	; 219
 d0c:	91 e0       	ldi	r25, 0x01	; 1
 d0e:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                        break;
 d12:	1e c0       	rjmp	.+60     	; 0xd50 <__stack+0x451>
 d14:	8f ef       	ldi	r24, 0xFF	; 255
 d16:	94 e3       	ldi	r25, 0x34	; 52
 d18:	ec e0       	ldi	r30, 0x0C	; 12
 d1a:	81 50       	subi	r24, 0x01	; 1
 d1c:	90 40       	sbci	r25, 0x00	; 0
 d1e:	e0 40       	sbci	r30, 0x00	; 0
 d20:	e1 f7       	brne	.-8      	; 0xd1a <__stack+0x41b>
 d22:	00 c0       	rjmp	.+0      	; 0xd24 <__stack+0x425>
 d24:	00 00       	nop

					case 7:
						_delay_ms(250);
						lcd_clrscr();
 d26:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
						lcd_gotoxy(0,0);
 d2a:	60 e0       	ldi	r22, 0x00	; 0
 d2c:	80 e0       	ldi	r24, 0x00	; 0
 d2e:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("9x rezistor 1K");
 d32:	8b ed       	ldi	r24, 0xDB	; 219
 d34:	91 e0       	ldi	r25, 0x01	; 1
 d36:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						lcd_gotoxy(0,1);
 d3a:	61 2f       	mov	r22, r17
 d3c:	80 e0       	ldi	r24, 0x00	; 0
 d3e:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("propojovaci draty");
 d42:	8a ee       	ldi	r24, 0xEA	; 234
 d44:	91 e0       	ldi	r25, 0x01	; 1
 d46:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
                        break;
 d4a:	02 c0       	rjmp	.+4      	; 0xd50 <__stack+0x451>

                    default:
                        info = 1;
 d4c:	77 24       	eor	r7, r7
 d4e:	73 94       	inc	r7
				}  /* End of switch (info) */
			}
		}  /* End of if (menu1) */
        /* If the condition is met, the submenu example is ready for browse*/
		if(condition==1)
 d50:	21 e0       	ldi	r18, 0x01	; 1
 d52:	d2 12       	cpse	r13, r18
 d54:	90 ca       	rjmp	.-2784   	; 0x276 <main+0x60>
		{
			/* Use button PD1 to start browse down through the list */
			if(bit_is_clear(PIND, 1))
 d56:	49 99       	sbic	0x09, 1	; 9
 d58:	8e ca       	rjmp	.-2788   	; 0x276 <main+0x60>
			{
				numberSub=numberSub+1;
 d5a:	a3 94       	inc	r10
				if (numberSub==4)
 d5c:	64 e0       	ldi	r22, 0x04	; 4
 d5e:	a6 16       	cp	r10, r22
 d60:	49 f0       	breq	.+18     	; 0xd74 <__stack+0x475>
				{
				numberSub = 1;
				}

				switch (numberSub)
 d62:	82 e0       	ldi	r24, 0x02	; 2
 d64:	a8 16       	cp	r10, r24
 d66:	79 f1       	breq	.+94     	; 0xdc6 <__stack+0x4c7>
 d68:	93 e0       	ldi	r25, 0x03	; 3
 d6a:	a9 16       	cp	r10, r25
 d6c:	09 f4       	brne	.+2      	; 0xd70 <__stack+0x471>
 d6e:	52 c0       	rjmp	.+164    	; 0xe14 <__stack+0x515>
 d70:	a2 12       	cpse	r10, r18
 d72:	81 ca       	rjmp	.-2814   	; 0x276 <main+0x60>
				{
					case 1:
						lcd_gotoxy(12,1);
 d74:	61 2f       	mov	r22, r17
 d76:	8c e0       	ldi	r24, 0x0C	; 12
 d78:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
 d7c:	ef ef       	ldi	r30, 0xFF	; 255
 d7e:	24 e3       	ldi	r18, 0x34	; 52
 d80:	6c e0       	ldi	r22, 0x0C	; 12
 d82:	e1 50       	subi	r30, 0x01	; 1
 d84:	20 40       	sbci	r18, 0x00	; 0
 d86:	60 40       	sbci	r22, 0x00	; 0
 d88:	e1 f7       	brne	.-8      	; 0xd82 <__stack+0x483>
 d8a:	00 c0       	rjmp	.+0      	; 0xd8c <__stack+0x48d>
 d8c:	00 00       	nop
						_delay_ms(250);
						lcd_gotoxy(0,0);
 d8e:	60 e0       	ldi	r22, 0x00	; 0
 d90:	80 e0       	ldi	r24, 0x00	; 0
 d92:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_clrscr();
 d96:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
						lcd_puts("pod-pod-MENU-1");
 d9a:	8c ef       	ldi	r24, 0xFC	; 252
 d9c:	91 e0       	ldi	r25, 0x01	; 1
 d9e:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						lcd_gotoxy(0,1);
 da2:	61 2f       	mov	r22, r17
 da4:	80 e0       	ldi	r24, 0x00	; 0
 da6:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("pod-pod-MENU-2");
 daa:	8b e0       	ldi	r24, 0x0B	; 11
 dac:	92 e0       	ldi	r25, 0x02	; 2
 dae:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						lcd_gotoxy(15,0);
 db2:	60 e0       	ldi	r22, 0x00	; 0
 db4:	8f e0       	ldi	r24, 0x0F	; 15
 db6:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_putc('*');
 dba:	8a e2       	ldi	r24, 0x2A	; 42
 dbc:	0e 94 9f 00 	call	0x13e	; 0x13e <lcd_putc>
					break;
 dc0:	aa 24       	eor	r10, r10
 dc2:	a3 94       	inc	r10
 dc4:	58 ca       	rjmp	.-2896   	; 0x276 <main+0x60>

					case 2:
						lcd_gotoxy(12,1);
 dc6:	61 2f       	mov	r22, r17
 dc8:	8c e0       	ldi	r24, 0x0C	; 12
 dca:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
 dce:	8f ef       	ldi	r24, 0xFF	; 255
 dd0:	94 e3       	ldi	r25, 0x34	; 52
 dd2:	ec e0       	ldi	r30, 0x0C	; 12
 dd4:	81 50       	subi	r24, 0x01	; 1
 dd6:	90 40       	sbci	r25, 0x00	; 0
 dd8:	e0 40       	sbci	r30, 0x00	; 0
 dda:	e1 f7       	brne	.-8      	; 0xdd4 <__stack+0x4d5>
 ddc:	00 c0       	rjmp	.+0      	; 0xdde <__stack+0x4df>
 dde:	00 00       	nop
						_delay_ms(250);
						lcd_gotoxy(0,0);
 de0:	60 e0       	ldi	r22, 0x00	; 0
 de2:	80 e0       	ldi	r24, 0x00	; 0
 de4:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_clrscr();
 de8:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
						lcd_puts("pod-pod-MENU-1");
 dec:	8c ef       	ldi	r24, 0xFC	; 252
 dee:	91 e0       	ldi	r25, 0x01	; 1
 df0:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						lcd_gotoxy(0,1);
 df4:	61 2f       	mov	r22, r17
 df6:	80 e0       	ldi	r24, 0x00	; 0
 df8:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_puts("pod-pod-MENU-2");
 dfc:	8b e0       	ldi	r24, 0x0B	; 11
 dfe:	92 e0       	ldi	r25, 0x02	; 2
 e00:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						lcd_gotoxy(15,1);
 e04:	61 2f       	mov	r22, r17
 e06:	8f e0       	ldi	r24, 0x0F	; 15
 e08:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_putc('*');
 e0c:	8a e2       	ldi	r24, 0x2A	; 42
 e0e:	0e 94 9f 00 	call	0x13e	; 0x13e <lcd_putc>
					break;
 e12:	31 ca       	rjmp	.-2974   	; 0x276 <main+0x60>

					case 3:
						lcd_gotoxy(12,1);
 e14:	61 2f       	mov	r22, r17
 e16:	8c e0       	ldi	r24, 0x0C	; 12
 e18:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
 e1c:	2f ef       	ldi	r18, 0xFF	; 255
 e1e:	64 e3       	ldi	r22, 0x34	; 52
 e20:	8c e0       	ldi	r24, 0x0C	; 12
 e22:	21 50       	subi	r18, 0x01	; 1
 e24:	60 40       	sbci	r22, 0x00	; 0
 e26:	80 40       	sbci	r24, 0x00	; 0
 e28:	e1 f7       	brne	.-8      	; 0xe22 <__stack+0x523>
 e2a:	00 c0       	rjmp	.+0      	; 0xe2c <__stack+0x52d>
 e2c:	00 00       	nop
						_delay_ms(250);
						lcd_gotoxy(0,0);
 e2e:	60 e0       	ldi	r22, 0x00	; 0
 e30:	80 e0       	ldi	r24, 0x00	; 0
 e32:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_clrscr();
 e36:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_clrscr>
						lcd_puts("pod-pod-MENU-3");
 e3a:	8a e1       	ldi	r24, 0x1A	; 26
 e3c:	92 e0       	ldi	r25, 0x02	; 2
 e3e:	0e 94 a3 00 	call	0x146	; 0x146 <lcd_puts>
						lcd_gotoxy(15,0);
 e42:	60 e0       	ldi	r22, 0x00	; 0
 e44:	8f e0       	ldi	r24, 0x0F	; 15
 e46:	0e 94 91 00 	call	0x122	; 0x122 <lcd_gotoxy>
						lcd_putc('*');
 e4a:	8a e2       	ldi	r24, 0x2A	; 42
 e4c:	0e 94 9f 00 	call	0x13e	; 0x13e <lcd_putc>
					break;
 e50:	12 ca       	rjmp	.-3036   	; 0x276 <main+0x60>
                PORTB |= _BV(PB2);
                _delay_ms(3000);
                PORTB &= ~_BV(PB2);
            }
            /* If button PD3 (SELECT) is pressed, the application is closed */
            if(bit_is_clear(PIND, 3))
 e52:	4b 9b       	sbis	0x09, 3	; 9
 e54:	32 cc       	rjmp	.-1948   	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 e56:	45 eb       	ldi	r20, 0xB5	; 181
 e58:	53 e0       	ldi	r21, 0x03	; 3
 e5a:	21 e0       	ldi	r18, 0x01	; 1
 e5c:	30 e0       	ldi	r19, 0x00	; 0
 e5e:	f1 2e       	mov	r15, r17
 e60:	38 cc       	rjmp	.-1936   	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
                PORTB &= ~_BV(PB4);
                for (j = 0; j < i; j++)
                _delay_us(1);

                PORTB |= _BV(PB4);
                for (j = 0; j < (N-i); j++)
 e62:	40 e0       	ldi	r20, 0x00	; 0
 e64:	50 e0       	ldi	r21, 0x00	; 0
 e66:	26 eb       	ldi	r18, 0xB6	; 182
 e68:	33 e0       	ldi	r19, 0x03	; 3
 e6a:	d2 cc       	rjmp	.-1628   	; 0x810 <__LOCK_REGION_LENGTH__+0x410>
                /* Blinking with waiting LEDs */
                PORTB &= ~_BV(PB4);
                for (j = 0; j < i; j++)
                _delay_us(1);

                PORTB |= _BV(PB4);
 e6c:	2c 9a       	sbi	0x05, 4	; 5
                for (j = 0; j < (N-i); j++)
 e6e:	ba 01       	movw	r22, r20
 e70:	be cc       	rjmp	.-1668   	; 0x7ee <__LOCK_REGION_LENGTH__+0x3ee>
                /* Decreasing blinking with waiting (yellow) LEDs */
                PORTB &= ~_BV(PB4);         /* Turn the waiting (yellow) LEDs off */
                for (j = 0; j < i; j++)
                _delay_us(1);

                PORTB |= _BV(PB4);          /* Turn the waiting (yellow) LEDs off */
 e72:	2c 9a       	sbi	0x05, 4	; 5
                for (j = 0; j < (N-i); j++)
 e74:	ba 01       	movw	r22, r20
 e76:	59 cd       	rjmp	.-1358   	; 0x92a <__stack+0x2b>
                {
                    seconds=-1;
                }
            }
            /* Use button PD5 to start countdown*/
            if(bit_is_clear(PINB, 5))
 e78:	1d 9b       	sbis	0x03, 5	; 3
 e7a:	06 c0       	rjmp	.+12     	; 0xe88 <__stack+0x589>
                lcd_puts(lcd_string);

                /* Overrun control */
                if(seconds==60)
                {
                    seconds=-1;
 e7c:	88 24       	eor	r8, r8
 e7e:	8a 94       	dec	r8
        }

        /* If the condition is met, the countdown application starts */
        if(time==1)
        {
			condition=0;
 e80:	d1 2c       	mov	r13, r1
 e82:	87 ce       	rjmp	.-754    	; 0xb92 <__stack+0x293>
								}
							}
						}
					}
				}
				time = 0; /* After the countdown is finished, the application is turned off */
 e84:	91 2c       	mov	r9, r1
 e86:	03 c0       	rjmp	.+6      	; 0xe8e <__stack+0x58f>
                lcd_puts(lcd_string);

                /* Overrun control */
                if(seconds==60)
                {
                    seconds=-1;
 e88:	88 24       	eor	r8, r8
 e8a:	8a 94       	dec	r8
								}
							}
						}
					}
				}
				time = 0; /* After the countdown is finished, the application is turned off */
 e8c:	91 2c       	mov	r9, r1
            }
		}  /* End of if (time == 1) */

        /* If the condition is met, the components list is open */
		if(menu1==1)
 e8e:	91 e0       	ldi	r25, 0x01	; 1
 e90:	c9 16       	cp	r12, r25
 e92:	39 f0       	breq	.+14     	; 0xea2 <__stack+0x5a3>
 e94:	d1 2c       	mov	r13, r1
 e96:	ef c9       	rjmp	.-3106   	; 0x276 <main+0x60>
                run=2;          /* Turn off the evaluation application */

            }

            else
            for (i = 1; i < N; i++)
 e98:	2f 5f       	subi	r18, 0xFF	; 255
 e9a:	3f 4f       	sbci	r19, 0xFF	; 255
 e9c:	41 50       	subi	r20, 0x01	; 1
 e9e:	51 09       	sbc	r21, r1
 ea0:	18 cc       	rjmp	.-2000   	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>

        /* If the condition is met, the components list is open */
		if(menu1==1)
		{
		    /* Use button PD0 to start browse through list of components */
			if(bit_is_clear(PIND, 0))
 ea2:	48 9b       	sbis	0x09, 0	; 9
 ea4:	7c ce       	rjmp	.-776    	; 0xb9e <__stack+0x29f>
 ea6:	d1 2c       	mov	r13, r1
 ea8:	e6 c9       	rjmp	.-3124   	; 0x276 <main+0x60>

00000eaa <__tablejump2__>:
 eaa:	ee 0f       	add	r30, r30
 eac:	ff 1f       	adc	r31, r31
 eae:	05 90       	lpm	r0, Z+
 eb0:	f4 91       	lpm	r31, Z
 eb2:	e0 2d       	mov	r30, r0
 eb4:	09 94       	ijmp

00000eb6 <__itoa_ncheck>:
 eb6:	bb 27       	eor	r27, r27
 eb8:	4a 30       	cpi	r20, 0x0A	; 10
 eba:	31 f4       	brne	.+12     	; 0xec8 <__itoa_ncheck+0x12>
 ebc:	99 23       	and	r25, r25
 ebe:	22 f4       	brpl	.+8      	; 0xec8 <__itoa_ncheck+0x12>
 ec0:	bd e2       	ldi	r27, 0x2D	; 45
 ec2:	90 95       	com	r25
 ec4:	81 95       	neg	r24
 ec6:	9f 4f       	sbci	r25, 0xFF	; 255
 ec8:	0c 94 67 07 	jmp	0xece	; 0xece <__utoa_common>

00000ecc <__utoa_ncheck>:
 ecc:	bb 27       	eor	r27, r27

00000ece <__utoa_common>:
 ece:	fb 01       	movw	r30, r22
 ed0:	55 27       	eor	r21, r21
 ed2:	aa 27       	eor	r26, r26
 ed4:	88 0f       	add	r24, r24
 ed6:	99 1f       	adc	r25, r25
 ed8:	aa 1f       	adc	r26, r26
 eda:	a4 17       	cp	r26, r20
 edc:	10 f0       	brcs	.+4      	; 0xee2 <__utoa_common+0x14>
 ede:	a4 1b       	sub	r26, r20
 ee0:	83 95       	inc	r24
 ee2:	50 51       	subi	r21, 0x10	; 16
 ee4:	b9 f7       	brne	.-18     	; 0xed4 <__utoa_common+0x6>
 ee6:	a0 5d       	subi	r26, 0xD0	; 208
 ee8:	aa 33       	cpi	r26, 0x3A	; 58
 eea:	08 f0       	brcs	.+2      	; 0xeee <__utoa_common+0x20>
 eec:	a9 5d       	subi	r26, 0xD9	; 217
 eee:	a1 93       	st	Z+, r26
 ef0:	00 97       	sbiw	r24, 0x00	; 0
 ef2:	79 f7       	brne	.-34     	; 0xed2 <__utoa_common+0x4>
 ef4:	b1 11       	cpse	r27, r1
 ef6:	b1 93       	st	Z+, r27
 ef8:	11 92       	st	Z+, r1
 efa:	cb 01       	movw	r24, r22
 efc:	0c 94 80 07 	jmp	0xf00	; 0xf00 <strrev>

00000f00 <strrev>:
 f00:	dc 01       	movw	r26, r24
 f02:	fc 01       	movw	r30, r24
 f04:	67 2f       	mov	r22, r23
 f06:	71 91       	ld	r23, Z+
 f08:	77 23       	and	r23, r23
 f0a:	e1 f7       	brne	.-8      	; 0xf04 <strrev+0x4>
 f0c:	32 97       	sbiw	r30, 0x02	; 2
 f0e:	04 c0       	rjmp	.+8      	; 0xf18 <strrev+0x18>
 f10:	7c 91       	ld	r23, X
 f12:	6d 93       	st	X+, r22
 f14:	70 83       	st	Z, r23
 f16:	62 91       	ld	r22, -Z
 f18:	ae 17       	cp	r26, r30
 f1a:	bf 07       	cpc	r27, r31
 f1c:	c8 f3       	brcs	.-14     	; 0xf10 <strrev+0x10>
 f1e:	08 95       	ret

00000f20 <_exit>:
 f20:	f8 94       	cli

00000f22 <__stop_program>:
 f22:	ff cf       	rjmp	.-2      	; 0xf22 <__stop_program>
